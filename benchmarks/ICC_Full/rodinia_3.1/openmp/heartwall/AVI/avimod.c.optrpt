Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 19.0.4.243 Build 20190416

Compiler options: -c -qopenmp -par-threshold0 -no-vec -fno-inline -parallel -qopt-report-phase=all -qopt-report=5 -o /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/AVI/avimod.o

    Report from: Interprocedural optimizations [ipo]

  WHOLE PROGRAM (SAFE) [EITHER METHOD]: false
  WHOLE PROGRAM (SEEN) [TABLE METHOD]: false
  WHOLE PROGRAM (READ) [OBJECT READER METHOD]: false

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000

In the inlining report below:
   "sz" refers to the "size" of the routine. The smaller a routine's size,
      the more likely it is to be inlined.
   "isz" refers to the "inlined size" of the routine. This is the amount
      the calling routine will grow if the called routine is inlined into it.
      The compiler generally limits the amount a routine can grow by having
      routines inlined into it.

Begin optimization report for: chop_flip_image(char *, int, int, int, int, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (chop_flip_image(char *, int, int, int, int, int)) [1/2=50.0%] /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/AVI/avimod.c(21,24)
  -> EXTERN: (49,22) malloc(size_t)
  -> EXTERN: (81,32) malloc(size_t)
  -> EXTERN: (92,2) free(void *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/AVI/avimod.c(55,3)
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ height_new bottom j right temp width height image width_new result i } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/AVI/avimod.c(56,4)
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/AVI/avimod.c(56,4)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/AVI/avimod.c(67,3)
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ height_new bottom j right temp width height image width_new result i } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/AVI/avimod.c(68,4)
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/AVI/avimod.c(68,4)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/AVI/avimod.c(83,3)
   remark #25101: Loop Interchange not done due to: Original Order seems proper
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ j right width_new result bottom result_converted height_new i } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/AVI/avimod.c(84,4)
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   LOOP END
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/AVI/avimod.c(55,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/AVI/avimod.c(56,4)
      remark #17107: loop was not parallelized: inner loop
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/AVI/avimod.c(56,4)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/AVI/avimod.c(67,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/AVI/avimod.c(68,4)
      remark #17107: loop was not parallelized: inner loop
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/AVI/avimod.c(68,4)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/AVI/avimod.c(83,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/AVI/avimod.c(84,4)
      remark #17107: loop was not parallelized: inner loop
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/AVI/avimod.c(21,24):remark #34051: REGISTER ALLOCATION : [chop_flip_image] /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/AVI/avimod.c:21

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   19[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm3]
        
    Routine temporaries
        Total         :     428
            Global    :     167
            Local     :     261
        Regenerable   :     131
        Spilled       :      17
        
    Routine stack
        Variables     :     204 bytes*
            Reads     :       6 [1.16e+01 ~ 1.0%]
            Writes    :      45 [0.00e+00 ~ 0.0%]
        Spills        :     184 bytes*
            Reads     :      66 [4.31e+01 ~ 3.8%]
            Writes    :      42 [2.39e+01 ~ 2.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: get_frame(avi_t *, int, int, int, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (get_frame(avi_t *, int, int, int, int)) [2/2=100.0%] /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/AVI/avimod.c(106,22)
  -> EXTERN: (110,14) AVI_video_width(avi_t *)
  -> EXTERN: (111,15) AVI_video_height(avi_t *)
  -> EXTERN: (115,2) AVI_set_video_position(avi_t *, long)
  -> EXTERN: (118,28) malloc(size_t)
  -> EXTERN: (119,11) AVI_read_frame(avi_t *, char *, int *)
  -> EXTERN: (121,3) AVI_print_error(char *)
  -> EXTERN: (122,3) exit(int)
  -> (127,18) chop_flip_image(char *, int, int, int, int, int) (isz = 177) (sz = 194)
     [[ Unable to inline callsite  <1>]]
  -> EXTERN: (135,2) free(void *)


    Report from: Code generation optimizations [cg]

/home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/AVI/avimod.c(106,22):remark #34051: REGISTER ALLOCATION : [get_frame] /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/AVI/avimod.c:106

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :      50
            Global    :      21
            Local     :      29
        Regenerable   :       5
        Spilled       :       7
        
    Routine stack
        Variables     :       4 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       1 [9.75e-01 ~ 1.5%]
            Writes    :       1 [1.00e+00 ~ 1.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

    Report from: Interprocedural optimizations [ipo]

INLINING FOOTNOTES:

<1> Inlining the function will lead to incorrect program behavior.

