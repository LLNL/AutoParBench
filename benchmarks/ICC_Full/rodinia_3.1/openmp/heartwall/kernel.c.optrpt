Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 19.0.4.243 Build 20190416

Compiler options: -c -par-threshold0 -no-vec -fno-inline -parallel -qopt-report-phase=all -qopt-report=5 -o /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.o

    Report from: Interprocedural optimizations [ipo]

  WHOLE PROGRAM (SAFE) [EITHER METHOD]: false
  WHOLE PROGRAM (SEEN) [TABLE METHOD]: false
  WHOLE PROGRAM (READ) [OBJECT READER METHOD]: false

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000

In the inlining report below:
   "sz" refers to the "size" of the routine. The smaller a routine's size,
      the more likely it is to be inlined.
   "isz" refers to the "inlined size" of the routine. This is the amount
      the calling routine will grow if the called routine is inlined into it.
      The compiler generally limits the amount a routine can grow by having
      routines inlined into it.

Begin optimization report for: kernel(public_struct, private_struct)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (kernel(public_struct, private_struct)) [1/1=100.0%] /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(10,28)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(84,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between d_in[col*public.in_mod_rows+row] (93:5) and public.d_frame[(*(private.d_Col+private.point_no*4)-25+col-1)*pu (93:5)
   remark #17106: parallel dependence: assumed ANTI dependence between public.d_frame[(*(private.d_Col+private.point_no*4)-25+col-1)*pu (93:5) and d_in[col*public.in_mod_rows+row] (93:5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(85,4)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed FLOW dependence between d_in[col*public.in_mod_rows+row] (93:5) and public.d_frame[(*(private.d_Col+private.point_no*4)-25+col-1)*pu (93:5)
      remark #17106: parallel dependence: assumed ANTI dependence between public.d_frame[(*(private.d_Col+private.point_no*4)-25+col-1)*pu (93:5) and d_in[col*public.in_mod_rows+row] (93:5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between d_in[col*public.in_mod_rows+row] (93:5) and public.d_frame[(*(private.d_Col+private.point_no*4)-25+col-1)*pu (93:5)
      remark #15346: vector dependence: assumed ANTI dependence between public.d_frame[(*(private.d_Col+private.point_no*4)-25+col-1)*pu (93:5) and d_in[col*public.in_mod_rows+row] (93:5)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(85,4)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(122,3)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ public.in2_cols row in2_rowlow public.frame_rows in2_collow public.d_frame public.in2_rows private.d_in2 private.d_in2_sqr col temp } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(123,4)
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(123,4)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(122,3)
<Multiversioned v2>
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between public.d_frame[(col+in2_collow-1)*public.frame_rows+row+in2_rowl (128:4) and private.d_in2_sqr[col*public.in2_rows+row] (130:4)
   remark #17106: parallel dependence: assumed FLOW dependence between private.d_in2_sqr[col*public.in2_rows+row] (130:4) and public.d_frame[(col+in2_collow-1)*public.frame_rows+row+in2_rowl (128:4)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(123,4)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed ANTI dependence between public.d_frame[(col+in2_collow-1)*public.frame_rows+row+in2_rowl (128:4) and private.d_in2_sqr[col*public.in2_rows+row] (130:4)
      remark #17106: parallel dependence: assumed FLOW dependence between private.d_in2_sqr[col*public.in2_rows+row] (130:4) and public.d_frame[(col+in2_collow-1)*public.frame_rows+row+in2_rowl (128:4)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between public.d_frame[(col+in2_collow-1)*public.frame_rows+row+in2_rowl (128:4) and private.d_in2_sqr[col*public.in2_rows+row] (130:4)
      remark #15346: vector dependence: assumed FLOW dependence between private.d_in2_sqr[col*public.in2_rows+row] (130:4) and public.d_frame[(col+in2_collow-1)*public.frame_rows+row+in2_rowl (128:4)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(123,4)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(145,3)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between private.d_in_sqr[pointer] (156:4) and private.d_in_sqr[pointer] (156:4)
   remark #17106: parallel dependence: assumed OUTPUT dependence between private.d_in_sqr[pointer] (156:4) and private.d_in_sqr[pointer] (156:4)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(146,4)
      remark #17109: LOOP WAS AUTO-PARALLELIZED
      remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ pointer public.in_mod_rows d_in private.d_in_mod private.d_in_sqr row temp col } lastprivate={ } firstlastprivate={ } reduction={ }
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(146,4)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(145,3)
<Multiversioned v2>
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between d_in[pointer] (154:4) and private.d_in_sqr[pointer] (156:4)
   remark #17106: parallel dependence: assumed FLOW dependence between private.d_in_sqr[pointer] (156:4) and d_in[pointer] (154:4)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(146,4)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed ANTI dependence between d_in[pointer] (154:4) and private.d_in_sqr[pointer] (156:4)
      remark #17106: parallel dependence: assumed FLOW dependence between private.d_in_sqr[pointer] (156:4) and d_in[pointer] (154:4)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between d_in[pointer] (154:4) and private.d_in_sqr[pointer] (156:4)
      remark #15346: vector dependence: assumed FLOW dependence between private.d_in_sqr[pointer] (156:4) and d_in[pointer] (154:4)
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(146,4)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(167,3)
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ public.in_mod_elem d_in i } lastprivate={ } firstlastprivate={ } reduction={ in_final_sum }
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25439: unrolled with remainder by 8  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   remark #25457: Number of partial sums replaced: 1
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(167,3)
<Remainder>
   remark #25436: completely unrolled by 7  
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(172,3)
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ public.in_mod_elem private.d_in_sqr i } lastprivate={ } firstlastprivate={ } reduction={ in_sqr_final_sum }
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25439: unrolled with remainder by 8  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   remark #25457: Number of partial sums replaced: 1
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(172,3)
<Remainder>
   remark #25436: completely unrolled by 7  
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(193,3)
   remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
   remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 3 4 ) --> ( 1 3 4 2 ) 
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between private.d_in_mod[public.in_mod_rows*(ja-1)+ia-1] (237:7) and private.d_conv[(col-1)*public.conv_rows+row-1] (241:5)
   remark #17106: parallel dependence: assumed FLOW dependence between private.d_conv[(col-1)*public.conv_rows+row-1] (241:5) and private.d_in_mod[public.in_mod_rows*(ja-1)+ia-1] (237:7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(211,4)
      remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
      remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 3 ) --> ( 2 3 1 ) 
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed ANTI dependence between private.d_in_mod[public.in_mod_rows*(ja-1)+ia-1] (237:7) and private.d_conv[(col-1)*public.conv_rows+row-1] (241:5)
      remark #17106: parallel dependence: assumed FLOW dependence between private.d_conv[(col-1)*public.conv_rows+row-1] (241:5) and private.d_in_mod[public.in_mod_rows*(ja-1)+ia-1] (237:7)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(233,5)
         remark #25084: Preprocess Loopnests: Moving Out Store    [ /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(235,10) ]
         remark #17104: loop was not parallelized: existence of parallel dependence
         remark #17106: parallel dependence: assumed ANTI dependence between ja (234:6) and ja (233:26)
         remark #17106: parallel dependence: assumed FLOW dependence between ja (233:26) and ja (234:6)
         remark #17106: parallel dependence: assumed FLOW dependence between ja (233:26) and ja (234:6)
         remark #17106: parallel dependence: assumed ANTI dependence between ja (234:6) and ja (233:26)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(235,6)
            remark #17109: LOOP WAS AUTO-PARALLELIZED
            remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ ia2 i jb public.in2_rows private.d_in2 public.in_mod_rows private.d_in_mod ia public.ioffset public.joffset ia1 ja1 ja row col } lastprivate={ } firstlastprivate={ } reduction={ s }
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25439: unrolled with remainder by 8  
            remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
            remark #25457: Number of partial sums replaced: 1
         LOOP END

         LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(235,6)
         <Remainder>
            remark #25436: completely unrolled by 7  
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(254,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between private.d_in2[(col-public.in2_pad_add_cols)*public.in2_rows+row- (264:5) and private.d_in2_pad[col*public.in2_pad_rows+row] (267:5)
   remark #17106: parallel dependence: assumed FLOW dependence between private.d_in2_pad[col*public.in2_pad_rows+row] (267:5) and private.d_in2[(col-public.in2_pad_add_cols)*public.in2_rows+row- (264:5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(255,4)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed ANTI dependence between private.d_in2[(col-public.in2_pad_add_cols)*public.in2_rows+row- (264:5) and private.d_in2_pad[col*public.in2_pad_rows+row] (267:5)
      remark #17106: parallel dependence: assumed FLOW dependence between private.d_in2_pad[col*public.in2_pad_rows+row] (267:5) and private.d_in2[(col-public.in2_pad_add_cols)*public.in2_rows+row- (264:5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between private.d_in2[(col-public.in2_pad_add_cols)*public.in2_rows+row- (264:5) and private.d_in2_pad[col*public.in2_pad_rows+row] (267:5)
      remark #15346: vector dependence: assumed FLOW dependence between private.d_in2_pad[col*public.in2_pad_rows+row] (267:5) and private.d_in2[(col-public.in2_pad_add_cols)*public.in2_rows+row- (264:5)
   LOOP END
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(277,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between private.d_in2_pad[position] (285:5) and private.d_in2_pad[position] (286:5)
   remark #17106: parallel dependence: assumed ANTI dependence between private.d_in2_pad[position] (286:5) and private.d_in2_pad[position] (285:5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(284,4)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed ANTI dependence between sum (285:5) and sum (286:5)
      remark #17106: parallel dependence: assumed FLOW dependence between sum (286:5) and sum (285:5)
      remark #17106: parallel dependence: assumed FLOW dependence between sum (286:5) and sum (285:5)
      remark #17106: parallel dependence: assumed ANTI dependence between sum (285:5) and sum (286:5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between sum (285:5) and sum (286:5)
      remark #15346: vector dependence: assumed FLOW dependence between sum (286:5) and sum (285:5)
      remark #15346: vector dependence: assumed FLOW dependence between sum (286:5) and sum (285:5)
      remark #15346: vector dependence: assumed ANTI dependence between sum (285:5) and sum (286:5)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(284,4)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(298,3)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ public.in2_sub_cols row public.in2_pad_cumv_sel2_rowlow public.in2_pad_rows public.in2_pad_cumv_sel2_collow private.d_in2_pad public.in2_pad_cumv_sel_rowlow public.in2_pad_cumv_sel_collow public.in2_sub_rows private.d_in2_sub col } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(299,4)
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      remark #25439: unrolled with remainder by 8  
   LOOP END

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(299,4)
   <Remainder>
      remark #25436: completely unrolled by 7  
   LOOP END
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(298,3)
<Multiversioned v2>
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between private.d_in2_sub[col*public.in2_sub_rows+row] (312:4) and private.d_in2_pad[(col+public.in2_pad_cumv_sel2_collow-1)*public (312:4)
   remark #17106: parallel dependence: assumed ANTI dependence between private.d_in2_pad[(col+public.in2_pad_cumv_sel2_collow-1)*public (312:4) and private.d_in2_sub[col*public.in2_sub_rows+row] (312:4)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(299,4)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed FLOW dependence between private.d_in2_sub[col*public.in2_sub_rows+row] (312:4) and private.d_in2_pad[(col+public.in2_pad_cumv_sel2_collow-1)*public (312:4)
      remark #17106: parallel dependence: assumed ANTI dependence between private.d_in2_pad[(col+public.in2_pad_cumv_sel2_collow-1)*public (312:4) and private.d_in2_sub[col*public.in2_sub_rows+row] (312:4)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between private.d_in2_sub[col*public.in2_sub_rows+row] (312:4) and private.d_in2_pad[(col+public.in2_pad_cumv_sel2_collow-1)*public (312:4)
      remark #15346: vector dependence: assumed ANTI dependence between private.d_in2_pad[(col+public.in2_pad_cumv_sel2_collow-1)*public (312:4) and private.d_in2_sub[col*public.in2_sub_rows+row] (312:4)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(299,4)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(321,3)
   remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
   remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 ) --> ( 2 1 ) 
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ position sum private.d_in2_sub public.in2_sub_rows public.in2_sub_elem ei_new } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(328,4)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between sum (329:5) and sum (330:5)
      remark #15346: vector dependence: assumed FLOW dependence between sum (330:5) and sum (329:5)
      remark #15346: vector dependence: assumed FLOW dependence between sum (330:5) and sum (329:5)
      remark #15346: vector dependence: assumed ANTI dependence between sum (329:5) and sum (330:5)
   LOOP END
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(344,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between private.d_in2_sub[(col+public.in2_sub_cumh_sel_collow-1)*public. (358:4) and private.d_conv[col*public.in2_sub2_sqr_rows+row] (364:4)
   remark #17106: parallel dependence: assumed FLOW dependence between private.d_conv[col*public.in2_sub2_sqr_rows+row] (364:4) and private.d_in2_sub[(col+public.in2_sub_cumh_sel_collow-1)*public. (358:4)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(345,4)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed ANTI dependence between private.d_in2_sub[(col+public.in2_sub_cumh_sel_collow-1)*public. (358:4) and private.d_conv[col*public.in2_sub2_sqr_rows+row] (364:4)
      remark #17106: parallel dependence: assumed FLOW dependence between private.d_conv[col*public.in2_sub2_sqr_rows+row] (364:4) and private.d_in2_sub[(col+public.in2_sub_cumh_sel_collow-1)*public. (358:4)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between private.d_in2_sub[(col+public.in2_sub_cumh_sel_collow-1)*public. (358:4) and private.d_conv[col*public.in2_sub2_sqr_rows+row] (364:4)
      remark #15346: vector dependence: assumed FLOW dependence between private.d_conv[col*public.in2_sub2_sqr_rows+row] (364:4) and private.d_in2_sub[(col+public.in2_sub_cumh_sel_collow-1)*public. (358:4)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(345,4)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(378,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between private.d_in2_sqr[(col-public.in2_pad_add_cols)*public.in2_rows+ (388:5) and private.d_in2_pad[col*public.in2_pad_rows+row] (391:5)
   remark #17106: parallel dependence: assumed FLOW dependence between private.d_in2_pad[col*public.in2_pad_rows+row] (391:5) and private.d_in2_sqr[(col-public.in2_pad_add_cols)*public.in2_rows+ (388:5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(379,4)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed ANTI dependence between private.d_in2_sqr[(col-public.in2_pad_add_cols)*public.in2_rows+ (388:5) and private.d_in2_pad[col*public.in2_pad_rows+row] (391:5)
      remark #17106: parallel dependence: assumed FLOW dependence between private.d_in2_pad[col*public.in2_pad_rows+row] (391:5) and private.d_in2_sqr[(col-public.in2_pad_add_cols)*public.in2_rows+ (388:5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between private.d_in2_sqr[(col-public.in2_pad_add_cols)*public.in2_rows+ (388:5) and private.d_in2_pad[col*public.in2_pad_rows+row] (391:5)
      remark #15346: vector dependence: assumed FLOW dependence between private.d_in2_pad[col*public.in2_pad_rows+row] (391:5) and private.d_in2_sqr[(col-public.in2_pad_add_cols)*public.in2_rows+ (388:5)
   LOOP END
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(402,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between private.d_in2_pad[position] (410:5) and private.d_in2_pad[position] (411:5)
   remark #17106: parallel dependence: assumed ANTI dependence between private.d_in2_pad[position] (411:5) and private.d_in2_pad[position] (410:5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(409,4)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed ANTI dependence between sum (410:5) and sum (411:5)
      remark #17106: parallel dependence: assumed FLOW dependence between sum (411:5) and sum (410:5)
      remark #17106: parallel dependence: assumed FLOW dependence between sum (411:5) and sum (410:5)
      remark #17106: parallel dependence: assumed ANTI dependence between sum (410:5) and sum (411:5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between sum (410:5) and sum (411:5)
      remark #15346: vector dependence: assumed FLOW dependence between sum (411:5) and sum (410:5)
      remark #15346: vector dependence: assumed FLOW dependence between sum (411:5) and sum (410:5)
      remark #15346: vector dependence: assumed ANTI dependence between sum (410:5) and sum (411:5)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(409,4)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(423,3)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ public.in2_sub_cols row public.in2_pad_cumv_sel2_rowlow public.in2_pad_rows public.in2_pad_cumv_sel2_collow private.d_in2_pad public.in2_pad_cumv_sel_rowlow public.in2_pad_cumv_sel_collow public.in2_sub_rows private.d_in2_sub col } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(424,4)
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      remark #25439: unrolled with remainder by 8  
   LOOP END

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(424,4)
   <Remainder>
      remark #25436: completely unrolled by 7  
   LOOP END
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(423,3)
<Multiversioned v2>
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between private.d_in2_sub[col*public.in2_sub_rows+row] (437:4) and private.d_in2_pad[(col+public.in2_pad_cumv_sel2_collow-1)*public (437:4)
   remark #17106: parallel dependence: assumed ANTI dependence between private.d_in2_pad[(col+public.in2_pad_cumv_sel2_collow-1)*public (437:4) and private.d_in2_sub[col*public.in2_sub_rows+row] (437:4)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(424,4)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed FLOW dependence between private.d_in2_sub[col*public.in2_sub_rows+row] (437:4) and private.d_in2_pad[(col+public.in2_pad_cumv_sel2_collow-1)*public (437:4)
      remark #17106: parallel dependence: assumed ANTI dependence between private.d_in2_pad[(col+public.in2_pad_cumv_sel2_collow-1)*public (437:4) and private.d_in2_sub[col*public.in2_sub_rows+row] (437:4)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between private.d_in2_sub[col*public.in2_sub_rows+row] (437:4) and private.d_in2_pad[(col+public.in2_pad_cumv_sel2_collow-1)*public (437:4)
      remark #15346: vector dependence: assumed ANTI dependence between private.d_in2_pad[(col+public.in2_pad_cumv_sel2_collow-1)*public (437:4) and private.d_in2_sub[col*public.in2_sub_rows+row] (437:4)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(424,4)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(446,3)
   remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
   remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 ) --> ( 2 1 ) 
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ position sum private.d_in2_sub public.in2_sub_rows public.in2_sub_elem ei_new } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(453,4)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between sum (454:5) and sum (455:5)
      remark #15346: vector dependence: assumed FLOW dependence between sum (455:5) and sum (454:5)
      remark #15346: vector dependence: assumed FLOW dependence between sum (455:5) and sum (454:5)
      remark #15346: vector dependence: assumed ANTI dependence between sum (454:5) and sum (455:5)
   LOOP END
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(471,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between private.d_conv[col*public.conv_rows+row] (500:4) and private.d_in2_sub[(col+public.in2_sub_cumh_sel2_collow-1)*public (500:4)
   remark #17106: parallel dependence: assumed ANTI dependence between private.d_in2_sub[(col+public.in2_sub_cumh_sel2_collow-1)*public (500:4) and private.d_conv[col*public.conv_rows+row] (500:4)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(472,4)
   <Multiversioned v1>
      remark #25228: Loop multiversioned for Data Dependence
      remark #17109: LOOP WAS AUTO-PARALLELIZED
      remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ public.in_mod_elem public.conv_rows private.d_in2_sub2_sqr public.in2_sub_cumh_sel2_rowlow public.in2_sub_rows public.in2_sub_cumh_sel2_collow private.d_in2_sub public.in2_sub_cumh_sel_rowlow public.in2_sub_cumh_sel_collow denomT private.d_conv row col } lastprivate={ } firstlastprivate={ } reduction={ }
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   LOOP END

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(472,4)
   <Multiversioned v2>
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed FLOW dependence between private.d_conv[col*public.conv_rows+row] (500:4) and private.d_in2_sub2_sqr[col*public.conv_rows+row] (500:4)
      remark #17106: parallel dependence: assumed ANTI dependence between private.d_in2_sub2_sqr[col*public.conv_rows+row] (500:4) and private.d_conv[col*public.conv_rows+row] (500:4)
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(516,3)
   remark #25408: memset generated
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between private.d_tMask[ei_new] (516:3) and private.d_tMask[ei_new] (517:4)
   remark #17106: parallel dependence: assumed OUTPUT dependence between private.d_tMask[ei_new] (517:4) and private.d_tMask[ei_new] (516:3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(516,3)
      remark #17109: LOOP WAS AUTO-PARALLELIZED
      remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ public.tMask_elem private.d_tMask ei_new } lastprivate={ } firstlastprivate={ } reduction={ }
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      remark #25439: unrolled with remainder by 2  
      remark #25015: Estimate of max trip count of loop=24
   LOOP END

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(516,3)
   <Remainder>
      remark #25015: Estimate of max trip count of loop=24
   LOOP END
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(529,3)
   remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
   remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 3 4 ) --> ( 1 3 4 2 ) 
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between private.d_tMask[public.tMask_rows*(ja-1)+ia-1] (574:7) and private.d_mask_conv[(col-1)*public.conv_rows+row-1] (578:5)
   remark #17106: parallel dependence: assumed FLOW dependence between private.d_mask_conv[(col-1)*public.conv_rows+row-1] (578:5) and private.d_tMask[public.tMask_rows*(ja-1)+ia-1] (574:7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(548,4)
      remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
      remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 3 ) --> ( 2 3 1 ) 
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed ANTI dependence between private.d_tMask[public.tMask_rows*(ja-1)+ia-1] (574:7) and private.d_mask_conv[(col-1)*public.conv_rows+row-1] (578:5)
      remark #17106: parallel dependence: assumed FLOW dependence between private.d_mask_conv[(col-1)*public.conv_rows+row-1] (578:5) and private.d_tMask[public.tMask_rows*(ja-1)+ia-1] (574:7)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(570,5)
         remark #25084: Preprocess Loopnests: Moving Out Store    [ /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(572,10) ]
         remark #17109: LOOP WAS AUTO-PARALLELIZED
         remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ ja2 ia1 public.tMask_rows private.d_tMask ia2 ja1 row col } lastprivate={ } firstlastprivate={ ia } reduction={ s ja }
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(572,6)
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25439: unrolled with remainder by 8  
            remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
            remark #25457: Number of partial sums replaced: 1
         LOOP END

         LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(572,6)
         <Remainder>
            remark #25436: completely unrolled by 7  
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(594,3)
   remark #17102: loop was not parallelized: not a parallelization candidate
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(594,3)
<Remainder>
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(637,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between d_in[col*public.in_mod_rows+row] (646:4) and public.d_frame[(*(private.d_Col+private.point_no*4)-25+col-1)*pu (646:4)
   remark #17106: parallel dependence: assumed ANTI dependence between public.d_frame[(*(private.d_Col+private.point_no*4)-25+col-1)*pu (646:4) and d_in[col*public.in_mod_rows+row] (646:4)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(638,4)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed FLOW dependence between d_in[col*public.in_mod_rows+row] (646:4) and public.d_frame[(*(private.d_Col+private.point_no*4)-25+col-1)*pu (646:4)
      remark #17106: parallel dependence: assumed ANTI dependence between public.d_frame[(*(private.d_Col+private.point_no*4)-25+col-1)*pu (646:4) and d_in[col*public.in_mod_rows+row] (646:4)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between d_in[col*public.in_mod_rows+row] (646:4) and public.d_frame[(*(private.d_Col+private.point_no*4)-25+col-1)*pu (646:4)
      remark #15346: vector dependence: assumed ANTI dependence between public.d_frame[(*(private.d_Col+private.point_no*4)-25+col-1)*pu (646:4) and d_in[col*public.in_mod_rows+row] (646:4)
      remark #25439: unrolled with remainder by 4  
   LOOP END

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(638,4)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(122,3)
<Multiversioned v1>
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(123,4)
      remark #17107: loop was not parallelized: inner loop
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      remark #25439: unrolled with remainder by 8  
   LOOP END

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(123,4)
   <Remainder>
      remark #25436: completely unrolled by 7  
   LOOP END
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(146,4)
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(146,4)
<Remainder>
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(167,3)
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25439: unrolled with remainder by 8  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   remark #25457: Number of partial sums replaced: 1
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(167,3)
<Remainder>
   remark #25436: completely unrolled by 7  
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(172,3)
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25439: unrolled with remainder by 8  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   remark #25457: Number of partial sums replaced: 1
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(172,3)
<Remainder>
   remark #25436: completely unrolled by 7  
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(235,6)
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25439: unrolled with remainder by 8  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   remark #25457: Number of partial sums replaced: 1
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(235,6)
<Remainder>
   remark #25436: completely unrolled by 7  
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(298,3)
<Multiversioned v1>
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(299,4)
      remark #17107: loop was not parallelized: inner loop
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      remark #25439: unrolled with remainder by 8  
   LOOP END

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(299,4)
   <Remainder>
      remark #25436: completely unrolled by 7  
   LOOP END
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(321,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(328,4)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed ANTI dependence between sum (329:5) and sum (330:5)
      remark #17106: parallel dependence: assumed FLOW dependence between sum (330:5) and sum (329:5)
      remark #17106: parallel dependence: assumed FLOW dependence between sum (330:5) and sum (329:5)
      remark #17106: parallel dependence: assumed ANTI dependence between sum (329:5) and sum (330:5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between private.d_in2_sub[position] (329:5) and private.d_in2_sub[position] (330:5)
      remark #15346: vector dependence: assumed ANTI dependence between private.d_in2_sub[position] (330:5) and private.d_in2_sub[position] (329:5)
   LOOP END
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(423,3)
<Multiversioned v1>
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(424,4)
      remark #17107: loop was not parallelized: inner loop
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      remark #25439: unrolled with remainder by 8  
   LOOP END

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(424,4)
   <Remainder>
      remark #25436: completely unrolled by 7  
   LOOP END
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(446,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(453,4)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed ANTI dependence between sum (454:5) and sum (455:5)
      remark #17106: parallel dependence: assumed FLOW dependence between sum (455:5) and sum (454:5)
      remark #17106: parallel dependence: assumed FLOW dependence between sum (455:5) and sum (454:5)
      remark #17106: parallel dependence: assumed ANTI dependence between sum (454:5) and sum (455:5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between private.d_in2_sub[position] (454:5) and private.d_in2_sub[position] (455:5)
      remark #15346: vector dependence: assumed ANTI dependence between private.d_in2_sub[position] (455:5) and private.d_in2_sub[position] (454:5)
   LOOP END
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(472,4)
<Multiversioned v1>
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(516,3)
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25439: unrolled with remainder by 2  
   remark #25015: Estimate of max trip count of loop=24
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(516,3)
<Remainder>
   remark #25015: Estimate of max trip count of loop=24
LOOP END

LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(570,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(572,6)
      remark #17107: loop was not parallelized: inner loop
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      remark #25439: unrolled with remainder by 8  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
      remark #25457: Number of partial sums replaced: 1
   LOOP END

   LOOP BEGIN at /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(572,6)
   <Remainder>
      remark #25436: completely unrolled by 7  
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(516,3):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(516,3):remark #34026: call to memset implemented as a call to optimized library version
/home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c(10,28):remark #34051: REGISTER ALLOCATION : [kernel] /home/gleison/Desktop/AutoParBench/benchmarks/ICC_Full/rodinia_3.1/openmp/heartwall/kernel.c:10

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :    3237
            Global    :     927
            Local     :    2310
        Regenerable   :     471
        Spilled       :     307
        
    Routine stack
        Variables     :     792 bytes*
            Reads     :      30 [8.52e+02 ~ 3.3%]
            Writes    :     177 [0.00e+00 ~ 0.0%]
        Spills        :    2424 bytes*
            Reads     :     729 [4.20e+03 ~ 16.3%]
            Writes    :     485 [1.16e+03 ~ 4.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
