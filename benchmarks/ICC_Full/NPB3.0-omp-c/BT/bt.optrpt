Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 19.0.4.243 Build 20190416

Compiler options: -w -qopenmp -no-vec -fno-inline -parallel -qopt-report-phase=all -qopt-report=5 -c

    Report from: Interprocedural optimizations [ipo]

  WHOLE PROGRAM (SAFE) [EITHER METHOD]: false
  WHOLE PROGRAM (SEEN) [TABLE METHOD]: false
  WHOLE PROGRAM (READ) [OBJECT READER METHOD]: false

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000

In the inlining report below:
   "sz" refers to the "size" of the routine. The smaller a routine's size,
      the more likely it is to be inlined.
   "isz" refers to the "inlined size" of the routine. This is the amount
      the calling routine will grow if the called routine is inlined into it.
      The compiler generally limits the amount a routine can grow by having
      routines inlined into it.

Begin optimization report for: rhs_norm(double *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (rhs_norm(double *)) [1/28=3.6%] bt.c(257,37)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at bt.c(265,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25436: completely unrolled by 5  
LOOP END

LOOP BEGIN at bt.c(269,3)
   remark #25101: Loop Interchange not done due to: Original Order seems proper
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between rms[m] (274:4) and rms[m] (274:4)
   remark #17106: parallel dependence: assumed OUTPUT dependence between rms[m] (274:4) and rms[m] (274:4)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at bt.c(270,5)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed OUTPUT dependence between rms[m] (274:4) and rms[m] (274:4)
      remark #17106: parallel dependence: assumed OUTPUT dependence between rms[m] (274:4) and rms[m] (274:4)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at bt.c(271,7)
         remark #17104: loop was not parallelized: existence of parallel dependence
         remark #17106: parallel dependence: assumed OUTPUT dependence between rms[m] (274:4) and rms[m] (274:4)
         remark #17106: parallel dependence: assumed OUTPUT dependence between rms[m] (274:4) and rms[m] (274:4)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at bt.c(272,2)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 5  
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(280,3)
<Distributed chunk1>
   remark #25426: Loop Distributed (2 way) 
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25436: completely unrolled by 5  

   LOOP BEGIN at bt.c(281,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      remark #25436: completely unrolled by 3  
   LOOP END

   LOOP BEGIN at bt.c(281,5)
   LOOP END

   LOOP BEGIN at bt.c(281,5)
   LOOP END

   LOOP BEGIN at bt.c(281,5)
   LOOP END

   LOOP BEGIN at bt.c(281,5)
   LOOP END
LOOP END

LOOP BEGIN at bt.c(280,3)
<Distributed chunk2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25436: completely unrolled by 5  
LOOP END

    Report from: Code generation optimizations [cg]

bt.c(257,37):remark #34051: REGISTER ALLOCATION : [rhs_norm] bt.c:257

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   25[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm9]
        
    Routine temporaries
        Total         :      65
            Global    :      28
            Local     :      37
        Regenerable   :       1
        Spilled       :       6
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [3.60e+00 ~ 0.0%]
            Writes    :       4 [3.60e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: compute_rhs(void)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (compute_rhs(void)) [2/28=7.1%] bt.c(1744,31)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at bt.c(1753,3)
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ j k rho_inv i } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(1754,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(1755,7)
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=65
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(1775,3)
   remark #25101: Loop Interchange not done due to: Original Order seems proper
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(1776,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(1777,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
         remark #25015: Estimate of max trip count of loop=65

         LOOP BEGIN at bt.c(1778,2)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 5  
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(1788,3)
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ j k uijk up1 um1 tx2 dx1tx1 c2 dx2tx1 con43 xxcon2 dx3tx1 dx4tx1 c1 xxcon5 xxcon3 dx5tx1 xxcon4 i } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(1789,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(1790,7)
         remark #25427: Loop Statements Reordered
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=65
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(1848,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(1849,5)
      remark #25420: Collapsed with loop at line 1850 
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      remark #25439: unrolled with remainder by 4  
      remark #25015: Estimate of max trip count of loop=5

      LOOP BEGIN at bt.c(1850,7)
         remark #25421: Loop eliminated in Collapsing 

      LOOP END
   LOOP END

   LOOP BEGIN at bt.c(1849,5)
   <Remainder>
      remark #25015: Estimate of max trip count of loop=5
   LOOP END
LOOP END

LOOP BEGIN at bt.c(1859,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(1860,5)
      remark #25420: Collapsed with loop at line 1861 
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      remark #25015: Estimate of max trip count of loop=5

      LOOP BEGIN at bt.c(1861,7)
         remark #25421: Loop eliminated in Collapsing 

      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(1869,3)
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ j k m dssp i } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(1870,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(1871,7)
         remark #25420: Collapsed with loop at line 1872 
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=5

         LOOP BEGIN at bt.c(1872,2)
            remark #25421: Loop eliminated in Collapsing 

         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(1883,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(1884,5)
      remark #25420: Collapsed with loop at line 1885 
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      remark #25015: Estimate of max trip count of loop=5

      LOOP BEGIN at bt.c(1885,7)
         remark #25421: Loop eliminated in Collapsing 

      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(1894,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(1895,5)
      remark #25420: Collapsed with loop at line 1896 
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      remark #25439: unrolled with remainder by 4  
      remark #25015: Estimate of max trip count of loop=5

      LOOP BEGIN at bt.c(1896,7)
         remark #25421: Loop eliminated in Collapsing 

      LOOP END
   LOOP END

   LOOP BEGIN at bt.c(1895,5)
   <Remainder>
      remark #25015: Estimate of max trip count of loop=5
   LOOP END
LOOP END

LOOP BEGIN at bt.c(1907,3)
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ j k vijk vp1 vm1 ty2 dy1ty1 yycon2 dy2ty1 c2 dy3ty1 con43 dy4ty1 c1 yycon5 yycon3 dy5ty1 yycon4 i } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(1908,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(1909,7)
         remark #25427: Loop Statements Reordered
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=65
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(1962,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(1963,5)
      remark #25420: Collapsed with loop at line 1964 
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      remark #25439: unrolled with remainder by 4  
      remark #25015: Estimate of max trip count of loop=5

      LOOP BEGIN at bt.c(1964,7)
         remark #25421: Loop eliminated in Collapsing 

      LOOP END
   LOOP END

   LOOP BEGIN at bt.c(1963,5)
   <Remainder>
      remark #25015: Estimate of max trip count of loop=5
   LOOP END
LOOP END

LOOP BEGIN at bt.c(1973,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(1974,5)
      remark #25420: Collapsed with loop at line 1975 
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      remark #25015: Estimate of max trip count of loop=5

      LOOP BEGIN at bt.c(1975,7)
         remark #25421: Loop eliminated in Collapsing 

      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(1983,3)
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ j k m dssp i } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(1984,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(1985,7)
         remark #25420: Collapsed with loop at line 1986 
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=5

         LOOP BEGIN at bt.c(1986,2)
            remark #25421: Loop eliminated in Collapsing 

         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(1997,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(1998,5)
      remark #25420: Collapsed with loop at line 1999 
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      remark #25015: Estimate of max trip count of loop=5

      LOOP BEGIN at bt.c(1999,7)
         remark #25421: Loop eliminated in Collapsing 

      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(2008,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(2009,5)
      remark #25420: Collapsed with loop at line 2010 
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      remark #25439: unrolled with remainder by 4  
      remark #25015: Estimate of max trip count of loop=5

      LOOP BEGIN at bt.c(2010,7)
         remark #25421: Loop eliminated in Collapsing 

      LOOP END
   LOOP END

   LOOP BEGIN at bt.c(2009,5)
   <Remainder>
      remark #25015: Estimate of max trip count of loop=5
   LOOP END
LOOP END

LOOP BEGIN at bt.c(2021,3)
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ j k wijk wp1 wm1 tz2 dz1tz1 zzcon2 dz2tz1 dz3tz1 c2 dz4tz1 con43 c1 zzcon5 zzcon3 dz5tz1 zzcon4 i } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(2022,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(2023,7)
         remark #25427: Loop Statements Reordered
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=65
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(2077,3)
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ j m dssp i } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(2078,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(2079,7)
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25436: completely unrolled by 5  
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(2088,3)
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ j m dssp i } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(2089,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(2090,7)
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25436: completely unrolled by 5  
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(2098,3)
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ j k m dssp i } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(2099,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(2100,7)
         remark #25420: Collapsed with loop at line 2101 
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=5

         LOOP BEGIN at bt.c(2101,2)
            remark #25421: Loop eliminated in Collapsing 

         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(2112,3)
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ j m k dssp i } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(2113,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(2114,7)
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25436: completely unrolled by 5  
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(2123,3)
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ j m k dssp i } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(2124,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(2125,7)
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25436: completely unrolled by 5  
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(2133,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between rhs[i][j][k][m] (2137:4) and rhs[i][j][k][m] (2137:4)
   remark #17106: parallel dependence: assumed OUTPUT dependence between rhs[i][j][k][m] (2137:4) and rhs[i][j][k][m] (2137:4)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(2134,5)
      remark #25420: Collapsed with loop at line 2135 
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed OUTPUT dependence between rhs[i][j][k][m] (2137:4) and rhs[i][j][k][m] (2137:4)
      remark #17106: parallel dependence: assumed OUTPUT dependence between rhs[i][j][k][m] (2137:4) and rhs[i][j][k][m] (2137:4)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(2136,2)
         remark #17104: loop was not parallelized: existence of parallel dependence
         remark #17106: parallel dependence: assumed FLOW dependence between rhs[i][j][k][m] (2137:4) and rhs[i][j][k][m] (2137:4)
         remark #17106: parallel dependence: assumed ANTI dependence between rhs[i][j][k][m] (2137:4) and rhs[i][j][k][m] (2137:4)
         remark #17106: parallel dependence: assumed OUTPUT dependence between rhs[i][j][k][m] (2137:4) and rhs[i][j][k][m] (2137:4)
         remark #17106: parallel dependence: assumed OUTPUT dependence between rhs[i][j][k][m] (2137:4) and rhs[i][j][k][m] (2137:4)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed FLOW dependence between rhs[i][j][k][m] (2137:4) and rhs[i][j][k][m] (2137:4)
         remark #15346: vector dependence: assumed ANTI dependence between rhs[i][j][k][m] (2137:4) and rhs[i][j][k][m] (2137:4)
         remark #25439: unrolled with remainder by 2  
         remark #25015: Estimate of max trip count of loop=65
      LOOP END

      LOOP BEGIN at bt.c(2136,2)
      <Remainder>
         remark #25015: Estimate of max trip count of loop=65
      LOOP END

      LOOP BEGIN at bt.c(2135,7)
         remark #25421: Loop eliminated in Collapsing 

      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(1753,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(1754,5)
      remark #17107: loop was not parallelized: inner loop
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(1755,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=65
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(1788,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(1789,5)
      remark #17107: loop was not parallelized: inner loop
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(1790,7)
         remark #17107: loop was not parallelized: inner loop
         remark #25427: Loop Statements Reordered
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=65
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(1869,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(1870,5)
      remark #17107: loop was not parallelized: inner loop
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(1871,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=5
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(1907,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(1908,5)
      remark #17107: loop was not parallelized: inner loop
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(1909,7)
         remark #17107: loop was not parallelized: inner loop
         remark #25427: Loop Statements Reordered
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=65
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(1983,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(1984,5)
      remark #17107: loop was not parallelized: inner loop
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(1985,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=5
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(2021,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(2022,5)
      remark #17107: loop was not parallelized: inner loop
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(2023,7)
         remark #17107: loop was not parallelized: inner loop
         remark #25427: Loop Statements Reordered
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=65
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(2077,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(2078,5)
      remark #17107: loop was not parallelized: inner loop
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(2079,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25436: completely unrolled by 5  
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(2088,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(2089,5)
      remark #17107: loop was not parallelized: inner loop
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(2090,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25436: completely unrolled by 5  
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(2098,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(2099,5)
      remark #17107: loop was not parallelized: inner loop
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(2100,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=5
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(2112,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(2113,5)
      remark #17107: loop was not parallelized: inner loop
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(2114,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25436: completely unrolled by 5  
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(2123,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(2124,5)
      remark #17107: loop was not parallelized: inner loop
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(2125,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25436: completely unrolled by 5  
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

bt.c(1744,31):remark #34051: REGISTER ALLOCATION : [compute_rhs] bt.c:1744

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :    2799
            Global    :     551
            Local     :    2248
        Regenerable   :     542
        Spilled       :      77
        
    Routine stack
        Variables     :     944 bytes*
            Reads     :      22 [1.22e+03 ~ 0.0%]
            Writes    :     180 [0.00e+00 ~ 0.0%]
        Spills        :     664 bytes*
            Reads     :     192 [1.17e+07 ~ 4.2%]
            Writes    :     195 [6.84e+01 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: exact_solution(double, double, double, double *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (exact_solution(double, double, double, double *)) [3/28=10.7%] bt.c(632,24)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at bt.c(643,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25436: completely unrolled by 5  
LOOP END

    Report from: Code generation optimizations [cg]

bt.c(632,24):remark #34051: REGISTER ALLOCATION : [exact_solution] bt.c:632

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   17[ rdi zmm0-zmm15]
        
    Routine temporaries
        Total         :     149
            Global    :       0
            Local     :     149
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: error_norm(double *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (error_norm(double *)) [4/28=14.3%] bt.c(216,39)
  -> (236,2) exact_solution(double, double, double, double *) (isz = 62) (sz = 73)
     [[ Unable to inline callsite  <1>]]


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at bt.c(226,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25436: completely unrolled by 5  
LOOP END

LOOP BEGIN at bt.c(230,3)
   remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact_solution(double, double, double, double *) (236:2) and call:exact_solution(double, double, double, double *) (236:2)
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact_solution(double, double, double, double *) (236:2) and call:exact_solution(double, double, double, double *) (236:2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at bt.c(232,5)
      remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
      remark #25452: Original Order found to be proper, but by a close margin
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact_solution(double, double, double, double *) (236:2) and call:exact_solution(double, double, double, double *) (236:2)
      remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact_solution(double, double, double, double *) (236:2) and call:exact_solution(double, double, double, double *) (236:2)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at bt.c(234,7)
         remark #17104: loop was not parallelized: existence of parallel dependence
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at bt.c(238,2)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 5  
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(246,3)
<Distributed chunk1>
   remark #25426: Loop Distributed (2 way) 
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25436: completely unrolled by 5  

   LOOP BEGIN at bt.c(247,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      remark #25436: completely unrolled by 3  
   LOOP END

   LOOP BEGIN at bt.c(247,5)
   LOOP END

   LOOP BEGIN at bt.c(247,5)
   LOOP END

   LOOP BEGIN at bt.c(247,5)
   LOOP END

   LOOP BEGIN at bt.c(247,5)
   LOOP END
LOOP END

LOOP BEGIN at bt.c(246,3)
<Distributed chunk2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25436: completely unrolled by 5  
LOOP END

    Report from: Code generation optimizations [cg]

bt.c(216,39):remark #34051: REGISTER ALLOCATION : [error_norm] bt.c:216

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   25[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm9]
        
    Routine temporaries
        Total         :      89
            Global    :      36
            Local     :      53
        Regenerable   :       3
        Spilled       :      23
        
    Routine stack
        Variables     :      40 bytes*
            Reads     :       5 [1.00e+06 ~ 10.4%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :     184 bytes*
            Reads     :      23 [1.61e+06 ~ 16.6%]
            Writes    :      23 [1.01e+06 ~ 10.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: verify(int, char *, boolean *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (verify(int, char *, boolean *)) [5/28=17.9%] bt.c(2344,71)
  -> (2366,3) error_norm(double *) (isz = 151) (sz = 156)
     [[ Unable to inline callsite  <1>]]
  -> (2367,3) compute_rhs(void) (isz = 2791) (sz = 2794)
     [[ Unable to inline callsite  <1>]]
  -> (2369,3) rhs_norm(double *) (isz = 139) (sz = 144)
     [[ Unable to inline callsite  <1>]]
  -> EXTERN: (2553,5) printf(const char *__restrict__, ...)
  -> EXTERN: (2554,5) printf(const char *__restrict__, ...)
  -> EXTERN: (2558,7) printf(const char *__restrict__, ...)
  -> EXTERN: (2561,5) printf(const char *__restrict__, ...)
  -> EXTERN: (2565,5) printf(const char *__restrict__, ...)
  -> EXTERN: (2567,5) printf(const char *__restrict__, ...)
  -> EXTERN: (2571,7) printf(const char *__restrict__, ...)
  -> EXTERN: (2574,7) printf(const char *__restrict__, ...)
  -> EXTERN: (2577,7) printf(const char *__restrict__, ...)
  -> EXTERN: (2583,5) printf(const char *__restrict__, ...)
  -> EXTERN: (2585,5) printf(const char *__restrict__, ...)
  -> EXTERN: (2590,7) printf(const char *__restrict__, ...)
  -> EXTERN: (2593,7) printf(const char *__restrict__, ...)
  -> EXTERN: (2596,7) printf(const char *__restrict__, ...)
  -> EXTERN: (2602,5) printf(const char *__restrict__, ...)
  -> EXTERN: (2603,5) printf(const char *__restrict__, ...)
  -> EXTERN: (2605,5) printf(const char *__restrict__, ...)
  -> EXTERN: (2607,5) printf(const char *__restrict__, ...)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at bt.c(2371,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25436: completely unrolled by 5  
LOOP END

LOOP BEGIN at bt.c(2378,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25436: completely unrolled by 5  
LOOP END

LOOP BEGIN at bt.c(2541,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25436: completely unrolled by 5  
LOOP END

LOOP BEGIN at bt.c(2569,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #15382: vectorization support: call to function printf(const char *__restrict__, ...) cannot be vectorized   [ bt.c(2571,7) ]
   remark #15382: vectorization support: call to function printf(const char *__restrict__, ...) cannot be vectorized   [ bt.c(2574,7) ]
   remark #15382: vectorization support: call to function printf(const char *__restrict__, ...) cannot be vectorized   [ bt.c(2577,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #25436: completely unrolled by 5  
LOOP END

LOOP BEGIN at bt.c(2588,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #15382: vectorization support: call to function printf(const char *__restrict__, ...) cannot be vectorized   [ bt.c(2590,7) ]
   remark #15382: vectorization support: call to function printf(const char *__restrict__, ...) cannot be vectorized   [ bt.c(2593,7) ]
   remark #15382: vectorization support: call to function printf(const char *__restrict__, ...) cannot be vectorized   [ bt.c(2596,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #25436: completely unrolled by 5  
LOOP END

    Report from: Code generation optimizations [cg]

bt.c(2344,71):remark #34051: REGISTER ALLOCATION : [verify] bt.c:2344

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   23[ rax rdx rbx rsi rdi r14-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     328
            Global    :      39
            Local     :     289
        Regenerable   :     153
        Spilled       :      25
        
    Routine stack
        Variables     :      80 bytes*
            Reads     :      40 [2.00e+01 ~ 7.0%]
            Writes    :       5 [5.00e+00 ~ 1.7%]
        Spills        :     176 bytes*
            Reads     :      68 [4.53e+01 ~ 15.8%]
            Writes    :      82 [2.70e+01 ~ 9.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: add(void)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (add(void)) [6/28=21.4%] bt.c(179,23)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at bt.c(187,3)
   remark #25101: Loop Interchange not done due to: Original Order seems proper
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ j k m i } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(188,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(189,7)
         remark #25420: Collapsed with loop at line 190 
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25439: unrolled with remainder by 8  
         remark #25015: Estimate of max trip count of loop=5

         LOOP BEGIN at bt.c(190,2)
            remark #25421: Loop eliminated in Collapsing 

         LOOP END
      LOOP END

      LOOP BEGIN at bt.c(189,7)
      <Remainder>
         remark #25436: completely unrolled by 7  
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(187,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(188,5)
      remark #17107: loop was not parallelized: inner loop
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(189,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25439: unrolled with remainder by 8  
         remark #25015: Estimate of max trip count of loop=5
      LOOP END

      LOOP BEGIN at bt.c(189,7)
      <Remainder>
         remark #25436: completely unrolled by 7  
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

bt.c(179,23):remark #34051: REGISTER ALLOCATION : [add] bt.c:179

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   23[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm7]
        
    Routine temporaries
        Total         :     219
            Global    :      44
            Local     :     175
        Regenerable   :      40
        Spilled       :       0
        
    Routine stack
        Variables     :      48 bytes*
            Reads     :       2 [1.17e+02 ~ 0.0%]
            Writes    :      12 [0.00e+00 ~ 0.0%]
        Spills        :      48 bytes*
            Reads     :      12 [6.00e+00 ~ 0.0%]
            Writes    :      12 [5.40e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: z_backsubstitute(void)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (z_backsubstitute(void)) [7/28=25.0%] bt.c(3428,36)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at bt.c(3442,3)
   remark #25101: Loop Interchange not done due to: Original Order seems proper
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ m j k n i } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(3443,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(3444,7)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
         remark #25015: Estimate of max trip count of loop=65

         LOOP BEGIN at bt.c(3445,2)
            remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
            remark #25436: completely unrolled by 5  

            LOOP BEGIN at bt.c(3446,4)
               remark #15344: loop was not vectorized: vector dependence prevents vectorization
               remark #15346: vector dependence: assumed FLOW dependence between rhs[i][j][k][m] (3447:6) and rhs[i][j][k][m] (3447:6)
               remark #15346: vector dependence: assumed ANTI dependence between rhs[i][j][k][m] (3447:6) and rhs[i][j][k][m] (3447:6)
               remark #25436: completely unrolled by 5  
            LOOP END

            LOOP BEGIN at bt.c(3446,4)
            LOOP END

            LOOP BEGIN at bt.c(3446,4)
            LOOP END

            LOOP BEGIN at bt.c(3446,4)
            LOOP END

            LOOP BEGIN at bt.c(3446,4)
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(3442,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(3443,5)
      remark #17107: loop was not parallelized: inner loop
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(3444,7)
         remark #17104: loop was not parallelized: existence of parallel dependence
         remark #17106: parallel dependence: assumed FLOW dependence between rhs[i][j][k][m] (3447:6) and rhs[i][j][k+1][n] (3447:6)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
         remark #25015: Estimate of max trip count of loop=65

         LOOP BEGIN at bt.c(3445,2)
            remark #17107: loop was not parallelized: inner loop
            remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
            remark #25436: completely unrolled by 5  

            LOOP BEGIN at bt.c(3446,4)
               remark #17104: loop was not parallelized: existence of parallel dependence
               remark #17106: parallel dependence: assumed FLOW dependence between rhs[i][j][k][m] (3447:6) and rhs[i][j][k][m] (3447:6)
               remark #17106: parallel dependence: assumed ANTI dependence between rhs[i][j][k][m] (3447:6) and rhs[i][j][k][m] (3447:6)
               remark #17106: parallel dependence: assumed OUTPUT dependence between rhs[i][j][k][m] (3447:6) and rhs[i][j][k][m] (3447:6)
               remark #17106: parallel dependence: assumed OUTPUT dependence between rhs[i][j][k][m] (3447:6) and rhs[i][j][k][m] (3447:6)
               remark #15344: loop was not vectorized: vector dependence prevents vectorization
               remark #15346: vector dependence: assumed FLOW dependence between rhs[i][j][k][m] (3447:6) and rhs[i][j][k][m] (3447:6)
               remark #15346: vector dependence: assumed ANTI dependence between rhs[i][j][k][m] (3447:6) and rhs[i][j][k][m] (3447:6)
               remark #25436: completely unrolled by 5  
            LOOP END

            LOOP BEGIN at bt.c(3446,4)
            LOOP END

            LOOP BEGIN at bt.c(3446,4)
            LOOP END

            LOOP BEGIN at bt.c(3446,4)
            LOOP END

            LOOP BEGIN at bt.c(3446,4)
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

bt.c(3428,36):remark #34051: REGISTER ALLOCATION : [z_backsubstitute] bt.c:3428

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     287
            Global    :      44
            Local     :     243
        Regenerable   :      39
        Spilled       :       1
        
    Routine stack
        Variables     :      52 bytes*
            Reads     :       2 [1.17e+02 ~ 0.0%]
            Writes    :      13 [0.00e+00 ~ 0.0%]
        Spills        :      56 bytes*
            Reads     :      13 [6.90e+00 ~ 0.0%]
            Writes    :      13 [6.30e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: binvrhs(double (*)[5], double *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (binvrhs(double (*)[5], double *)) [8/28=28.6%] bt.c(3106,54)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at bt.c(3118,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25436: completely unrolled by 4  
LOOP END

LOOP BEGIN at bt.c(3125,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between lhs[1][_2+1] (3125:3) and lhs[_2+1] (3125:3)
   remark #17106: parallel dependence: assumed ANTI dependence between lhs[_2+1] (3125:3) and lhs[1][_2+1] (3125:3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between lhs[1][_2+1] (3125:3) and lhs[_2+1] (3125:3)
   remark #15346: vector dependence: assumed ANTI dependence between lhs[_2+1] (3125:3) and lhs[1][_2+1] (3125:3)
   remark #25436: completely unrolled by 4  
LOOP END

LOOP BEGIN at bt.c(3132,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between lhs[2][_2+1] (3132:3) and lhs[_2+1] (3132:3)
   remark #17106: parallel dependence: assumed ANTI dependence between lhs[_2+1] (3132:3) and lhs[2][_2+1] (3132:3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between lhs[2][_2+1] (3132:3) and lhs[_2+1] (3132:3)
   remark #15346: vector dependence: assumed ANTI dependence between lhs[_2+1] (3132:3) and lhs[2][_2+1] (3132:3)
   remark #25436: completely unrolled by 4  
LOOP END

LOOP BEGIN at bt.c(3139,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between lhs[3][_2+1] (3139:3) and lhs[_2+1] (3139:3)
   remark #17106: parallel dependence: assumed ANTI dependence between lhs[_2+1] (3139:3) and lhs[3][_2+1] (3139:3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between lhs[3][_2+1] (3139:3) and lhs[_2+1] (3139:3)
   remark #15346: vector dependence: assumed ANTI dependence between lhs[_2+1] (3139:3) and lhs[3][_2+1] (3139:3)
   remark #25436: completely unrolled by 4  
LOOP END

LOOP BEGIN at bt.c(3146,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between lhs[4][_2+1] (3146:3) and lhs[_2+1] (3146:3)
   remark #17106: parallel dependence: assumed ANTI dependence between lhs[_2+1] (3146:3) and lhs[4][_2+1] (3146:3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between lhs[4][_2+1] (3146:3) and lhs[_2+1] (3146:3)
   remark #15346: vector dependence: assumed ANTI dependence between lhs[_2+1] (3146:3) and lhs[4][_2+1] (3146:3)
   remark #25436: completely unrolled by 4  
LOOP END

    Report from: Code generation optimizations [cg]

bt.c(3106,54):remark #34051: REGISTER ALLOCATION : [binvrhs] bt.c:3106

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   18[ rsi rdi zmm0-zmm15]
        
    Routine temporaries
        Total         :     179
            Global    :       0
            Local     :     179
        Regenerable   :       1
        Spilled       :      15
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :     120 bytes*
            Reads     :      18 [1.80e+01 ~ 6.3%]
            Writes    :      17 [1.70e+01 ~ 5.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: matmul_sub(double (*)[5], double (*)[5], double (*)[5])

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (matmul_sub(double (*)[5], double (*)[5], double (*)[5])) [9/28=32.1%] bt.c(2794,31)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at bt.c(2805,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between cblock[j] (2806:5) and cblock[4][j] (2826:5)
   remark #17106: parallel dependence: assumed OUTPUT dependence between cblock[4][j] (2826:5) and cblock[j] (2806:5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between cblock[j] (2806:5) and cblock[4][j] (2826:5)
   remark #15346: vector dependence: assumed OUTPUT dependence between cblock[4][j] (2826:5) and cblock[j] (2806:5)
   remark #25436: completely unrolled by 5  
LOOP END

    Report from: Code generation optimizations [cg]

bt.c(2794,31):remark #34051: REGISTER ALLOCATION : [matmul_sub] bt.c:2794

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   19[ rdx rsi rdi zmm0-zmm15]
        
    Routine temporaries
        Total         :     413
            Global    :      11
            Local     :     402
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: matvec_sub(double (*)[5], double *, double *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (matvec_sub(double (*)[5], double *, double *)) [10/28=35.7%] bt.c(2766,77)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at bt.c(2777,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between bvec[i] (2782:5) and *avec (2782:5)
   remark #17106: parallel dependence: assumed ANTI dependence between *avec (2782:5) and bvec[i] (2782:5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between bvec[i] (2782:5) and *avec (2782:5)
   remark #15346: vector dependence: assumed ANTI dependence between *avec (2782:5) and bvec[i] (2782:5)
   remark #25436: completely unrolled by 5  
LOOP END

    Report from: Code generation optimizations [cg]

bt.c(2766,77):remark #34051: REGISTER ALLOCATION : [matvec_sub] bt.c:2766

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   19[ rdx rsi rdi zmm0-zmm15]
        
    Routine temporaries
        Total         :      92
            Global    :       0
            Local     :      92
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: binvcrhs(double (*)[5], double (*)[5], double *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (binvcrhs(double (*)[5], double (*)[5], double *)) [11/28=39.3%] bt.c(2837,69)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at bt.c(2849,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25436: completely unrolled by 4  
LOOP END

LOOP BEGIN at bt.c(2853,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25436: completely unrolled by 5  
LOOP END

LOOP BEGIN at bt.c(2861,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between lhs[1][_2+1] (2861:3) and lhs[_2+1] (2861:3)
   remark #17106: parallel dependence: assumed ANTI dependence between lhs[_2+1] (2861:3) and lhs[1][_2+1] (2861:3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between lhs[1][_2+1] (2861:3) and lhs[_2+1] (2861:3)
   remark #15346: vector dependence: assumed ANTI dependence between lhs[_2+1] (2861:3) and lhs[1][_2+1] (2861:3)
   remark #25436: completely unrolled by 4  
LOOP END

LOOP BEGIN at bt.c(2865,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between c[1][_2] (2865:3) and c[_2] (2865:3)
   remark #17106: parallel dependence: assumed ANTI dependence between c[_2] (2865:3) and c[1][_2] (2865:3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between c[1][_2] (2865:3) and c[_2] (2865:3)
   remark #15346: vector dependence: assumed ANTI dependence between c[_2] (2865:3) and c[1][_2] (2865:3)
   remark #25436: completely unrolled by 5  
LOOP END

LOOP BEGIN at bt.c(2873,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between lhs[2][_2+1] (2873:3) and lhs[_2+1] (2873:3)
   remark #17106: parallel dependence: assumed ANTI dependence between lhs[_2+1] (2873:3) and lhs[2][_2+1] (2873:3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between lhs[2][_2+1] (2873:3) and lhs[_2+1] (2873:3)
   remark #15346: vector dependence: assumed ANTI dependence between lhs[_2+1] (2873:3) and lhs[2][_2+1] (2873:3)
   remark #25436: completely unrolled by 4  
LOOP END

LOOP BEGIN at bt.c(2877,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between c[2][_2] (2877:3) and c[_2] (2877:3)
   remark #17106: parallel dependence: assumed ANTI dependence between c[_2] (2877:3) and c[2][_2] (2877:3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between c[2][_2] (2877:3) and c[_2] (2877:3)
   remark #15346: vector dependence: assumed ANTI dependence between c[_2] (2877:3) and c[2][_2] (2877:3)
   remark #25436: completely unrolled by 5  
LOOP END

LOOP BEGIN at bt.c(2885,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between lhs[3][_2+1] (2885:3) and lhs[_2+1] (2885:3)
   remark #17106: parallel dependence: assumed ANTI dependence between lhs[_2+1] (2885:3) and lhs[3][_2+1] (2885:3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between lhs[3][_2+1] (2885:3) and lhs[_2+1] (2885:3)
   remark #15346: vector dependence: assumed ANTI dependence between lhs[_2+1] (2885:3) and lhs[3][_2+1] (2885:3)
   remark #25436: completely unrolled by 4  
LOOP END

LOOP BEGIN at bt.c(2889,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between c[3][_2] (2889:3) and c[_2] (2889:3)
   remark #17106: parallel dependence: assumed ANTI dependence between c[_2] (2889:3) and c[3][_2] (2889:3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between c[3][_2] (2889:3) and c[_2] (2889:3)
   remark #15346: vector dependence: assumed ANTI dependence between c[_2] (2889:3) and c[3][_2] (2889:3)
   remark #25436: completely unrolled by 5  
LOOP END

LOOP BEGIN at bt.c(2897,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between lhs[4][_2+1] (2897:3) and lhs[_2+1] (2897:3)
   remark #17106: parallel dependence: assumed ANTI dependence between lhs[_2+1] (2897:3) and lhs[4][_2+1] (2897:3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between lhs[4][_2+1] (2897:3) and lhs[_2+1] (2897:3)
   remark #15346: vector dependence: assumed ANTI dependence between lhs[_2+1] (2897:3) and lhs[4][_2+1] (2897:3)
   remark #25436: completely unrolled by 4  
LOOP END

LOOP BEGIN at bt.c(2901,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between c[4][_2] (2901:3) and c[_2] (2901:3)
   remark #17106: parallel dependence: assumed ANTI dependence between c[_2] (2901:3) and c[4][_2] (2901:3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between c[4][_2] (2901:3) and c[_2] (2901:3)
   remark #15346: vector dependence: assumed ANTI dependence between c[_2] (2901:3) and c[4][_2] (2901:3)
   remark #25436: completely unrolled by 5  
LOOP END

LOOP BEGIN at bt.c(2913,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25436: completely unrolled by 5  
LOOP END

LOOP BEGIN at bt.c(2924,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between c[_2] (2924:3) and c[1][_2] (2924:3)
   remark #17106: parallel dependence: assumed ANTI dependence between c[1][_2] (2924:3) and c[_2] (2924:3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between c[_2] (2924:3) and c[1][_2] (2924:3)
   remark #15346: vector dependence: assumed ANTI dependence between c[1][_2] (2924:3) and c[_2] (2924:3)
   remark #25436: completely unrolled by 5  
LOOP END

LOOP BEGIN at bt.c(2935,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25436: completely unrolled by 5  
LOOP END

LOOP BEGIN at bt.c(2946,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25436: completely unrolled by 5  
LOOP END

LOOP BEGIN at bt.c(2957,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25436: completely unrolled by 5  
LOOP END

LOOP BEGIN at bt.c(2968,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25436: completely unrolled by 5  
LOOP END

LOOP BEGIN at bt.c(2978,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between c[_2] (2978:3) and c[2][_2] (2978:3)
   remark #17106: parallel dependence: assumed ANTI dependence between c[2][_2] (2978:3) and c[_2] (2978:3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between c[_2] (2978:3) and c[2][_2] (2978:3)
   remark #15346: vector dependence: assumed ANTI dependence between c[2][_2] (2978:3) and c[_2] (2978:3)
   remark #25436: completely unrolled by 5  
LOOP END

LOOP BEGIN at bt.c(2988,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25436: completely unrolled by 5  
LOOP END

LOOP BEGIN at bt.c(2998,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25436: completely unrolled by 5  
LOOP END

LOOP BEGIN at bt.c(3008,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25436: completely unrolled by 5  
LOOP END

LOOP BEGIN at bt.c(3018,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25436: completely unrolled by 5  
LOOP END

LOOP BEGIN at bt.c(3027,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between c[_2] (3027:3) and c[3][_2] (3027:3)
   remark #17106: parallel dependence: assumed ANTI dependence between c[3][_2] (3027:3) and c[_2] (3027:3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between c[_2] (3027:3) and c[3][_2] (3027:3)
   remark #15346: vector dependence: assumed ANTI dependence between c[3][_2] (3027:3) and c[_2] (3027:3)
   remark #25436: completely unrolled by 5  
LOOP END

LOOP BEGIN at bt.c(3036,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25436: completely unrolled by 5  
LOOP END

LOOP BEGIN at bt.c(3045,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25436: completely unrolled by 5  
LOOP END

LOOP BEGIN at bt.c(3054,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25436: completely unrolled by 5  
LOOP END

LOOP BEGIN at bt.c(3063,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25436: completely unrolled by 5  
LOOP END

LOOP BEGIN at bt.c(3071,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between c[_2] (3071:3) and c[4][_2] (3071:3)
   remark #17106: parallel dependence: assumed ANTI dependence between c[4][_2] (3071:3) and c[_2] (3071:3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between c[_2] (3071:3) and c[4][_2] (3071:3)
   remark #15346: vector dependence: assumed ANTI dependence between c[4][_2] (3071:3) and c[_2] (3071:3)
   remark #25436: completely unrolled by 5  
LOOP END

LOOP BEGIN at bt.c(3079,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25436: completely unrolled by 5  
LOOP END

LOOP BEGIN at bt.c(3087,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25436: completely unrolled by 5  
LOOP END

LOOP BEGIN at bt.c(3095,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25436: completely unrolled by 5  
LOOP END

    Report from: Code generation optimizations [cg]

bt.c(2837,69):remark #34051: REGISTER ALLOCATION : [binvcrhs] bt.c:2837

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   19[ rdx rsi rdi zmm0-zmm15]
        
    Routine temporaries
        Total         :     691
            Global    :      30
            Local     :     661
        Regenerable   :       1
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      16 bytes*
            Reads     :       2 [2.00e+00 ~ 0.2%]
            Writes    :       2 [2.00e+00 ~ 0.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: z_solve_cell(void)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (z_solve_cell(void)) [12/28=42.9%] bt.c(3459,32)
  -> (3488,7) binvcrhs(double (*)[5], double (*)[5], double *) (isz = 2146) (sz = 2155)
     [[ Unable to inline callsite  <1>]]
  -> (3508,2) matvec_sub(double (*)[5], double *, double *) (isz = 55) (sz = 64)
     [[ Unable to inline callsite  <1>]]
  -> (3515,2) matmul_sub(double (*)[5], double (*)[5], double (*)[5]) (isz = 232) (sz = 241)
     [[ Unable to inline callsite  <1>]]
  -> (3523,2) binvcrhs(double (*)[5], double (*)[5], double *) (isz = 2146) (sz = 2155)
     [[ Unable to inline callsite  <1>]]
  -> (3540,7) matvec_sub(double (*)[5], double *, double *) (isz = 55) (sz = 64)
     [[ Unable to inline callsite  <1>]]
  -> (3548,7) matmul_sub(double (*)[5], double (*)[5], double (*)[5]) (isz = 232) (sz = 241)
     [[ Unable to inline callsite  <1>]]
  -> (3555,7) binvrhs(double (*)[5], double *) (isz = 817) (sz = 824)
     [[ Unable to inline callsite  <1>]]


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at bt.c(3481,3)
   remark #25095: Loop Interchange not done due to: User Function Inside Loop Nest
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:binvcrhs(double (*)[5], double (*)[5], double *) (3488:7) and call:binvcrhs(double (*)[5], double (*)[5], double *) (3488:7)
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:binvcrhs(double (*)[5], double (*)[5], double *) (3488:7) and call:binvcrhs(double (*)[5], double (*)[5], double *) (3488:7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at bt.c(3482,5)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #15382: vectorization support: call to function binvcrhs(double (*)[5], double (*)[5], double *) cannot be vectorized   [ bt.c(3488,7) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
   LOOP END
LOOP END

LOOP BEGIN at bt.c(3499,3)
   remark #25095: Loop Interchange not done due to: User Function Inside Loop Nest
   remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 3 ) --> ( 2 3 1 ) 
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:matvec_sub(double (*)[5], double *, double *) (3508:2) and call:binvcrhs(double (*)[5], double (*)[5], double *) (3523:2)
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:binvcrhs(double (*)[5], double (*)[5], double *) (3523:2) and call:matvec_sub(double (*)[5], double *, double *) (3508:2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at bt.c(3500,7)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed OUTPUT dependence between call:matvec_sub(double (*)[5], double *, double *) (3508:2) and call:binvcrhs(double (*)[5], double (*)[5], double *) (3523:2)
      remark #17106: parallel dependence: assumed OUTPUT dependence between call:binvcrhs(double (*)[5], double (*)[5], double *) (3523:2) and call:matvec_sub(double (*)[5], double *, double *) (3508:2)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at bt.c(3501,4)
         remark #17104: loop was not parallelized: existence of parallel dependence
         remark #15382: vectorization support: call to function matvec_sub(double (*)[5], double *, double *) cannot be vectorized   [ bt.c(3508,2) ]
         remark #15382: vectorization support: call to function matmul_sub(double (*)[5], double (*)[5], double (*)[5]) cannot be vectorized   [ bt.c(3515,2) ]
         remark #15382: vectorization support: call to function binvcrhs(double (*)[5], double (*)[5], double *) cannot be vectorized   [ bt.c(3523,2) ]
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(3534,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:matvec_sub(double (*)[5], double *, double *) (3540:7) and call:binvrhs(double (*)[5], double *) (3555:7)
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:binvrhs(double (*)[5], double *) (3555:7) and call:matvec_sub(double (*)[5], double *, double *) (3540:7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at bt.c(3535,5)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #15382: vectorization support: call to function matvec_sub(double (*)[5], double *, double *) cannot be vectorized   [ bt.c(3540,7) ]
      remark #15382: vectorization support: call to function matmul_sub(double (*)[5], double (*)[5], double (*)[5]) cannot be vectorized   [ bt.c(3548,7) ]
      remark #15382: vectorization support: call to function binvrhs(double (*)[5], double *) cannot be vectorized   [ bt.c(3555,7) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

bt.c(3459,32):remark #34051: REGISTER ALLOCATION : [z_solve_cell] bt.c:3459

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :      87
            Global    :      56
            Local     :      31
        Regenerable   :       5
        Spilled       :      34
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :     224 bytes*
            Reads     :      33 [1.30e+05 ~ 24.8%]
            Writes    :      34 [3.64e+03 ~ 0.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: lhsz(void)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (lhsz(void)) [13/28=46.4%] bt.c(1454,24)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at bt.c(1469,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between tmp1 (1473:2) and tmp1 (1473:2)
   remark #17106: parallel dependence: assumed OUTPUT dependence between tmp1 (1473:2) and tmp1 (1473:2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(1470,5)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed OUTPUT dependence between tmp1 (1473:2) and tmp1 (1473:2)
      remark #17106: parallel dependence: assumed OUTPUT dependence between tmp1 (1473:2) and tmp1 (1473:2)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(1471,7)
         remark #25084: Preprocess Loopnests: Moving Out Store    [ bt.c(1473,2) ]
         remark #25084: Preprocess Loopnests: Moving Out Store    [ bt.c(1474,2) ]
         remark #25084: Preprocess Loopnests: Moving Out Store    [ bt.c(1475,2) ]
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
         remark #25015: Estimate of max trip count of loop=64

         LOOP BEGIN at bt.c(1477,2)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 5  
         LOOP END

         LOOP BEGIN at bt.c(1525,2)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 5  
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(1569,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between tmp1 (1573:2) and tmp1 (1573:2)
   remark #17106: parallel dependence: assumed OUTPUT dependence between tmp1 (1573:2) and tmp1 (1573:2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(1570,5)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed OUTPUT dependence between tmp1 (1573:2) and tmp1 (1573:2)
      remark #17106: parallel dependence: assumed OUTPUT dependence between tmp1 (1573:2) and tmp1 (1573:2)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(1571,7)
         remark #25084: Preprocess Loopnests: Moving Out Store    [ bt.c(1573,2) ]
         remark #25084: Preprocess Loopnests: Moving Out Store    [ bt.c(1574,2) ]
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
         remark #25015: Estimate of max trip count of loop=64

         LOOP BEGIN at bt.c(1579,2)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 4  
         LOOP END

         LOOP BEGIN at bt.c(1624,2)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 4  
         LOOP END

         LOOP BEGIN at bt.c(1639,2)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 4  
         LOOP END

         LOOP BEGIN at bt.c(1668,2)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 4  
         LOOP END

         LOOP BEGIN at bt.c(1679,2)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 4  
         LOOP END

         LOOP BEGIN at bt.c(1724,2)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 4  
         LOOP END
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

bt.c(1454,24):remark #34051: REGISTER ALLOCATION : [lhsz] bt.c:1454

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rbp rsi rdi r8-r11 r13-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     433
            Global    :      62
            Local     :     371
        Regenerable   :       6
        Spilled       :      16
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      96 bytes*
            Reads     :      12 [2.08e+06 ~ 1.9%]
            Writes    :      12 [3.12e+03 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: z_solve(void)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (z_solve(void)) [14/28=50.0%] bt.c(3405,27)
  -> (3420,3) lhsz(void) (isz = 2246) (sz = 2249)
     [[ Unable to inline callsite  <1>]]
  -> (3421,3) z_solve_cell(void) (isz = 241) (sz = 244)
     [[ Unable to inline callsite  <1>]]
  -> (3422,3) z_backsubstitute(void) (isz = 96) (sz = 99)
     [[ Unable to inline callsite  <1>]]


    Report from: Code generation optimizations [cg]

bt.c(3405,27):remark #34051: REGISTER ALLOCATION : [z_solve] bt.c:3405

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    0[ reg_null]
        
    Routine temporaries
        Total         :       6
            Global    :       6
            Local     :       0
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: y_backsubstitute(void)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (y_backsubstitute(void)) [15/28=53.6%] bt.c(3275,36)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at bt.c(3289,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between rhs[i][j][k][m] (3294:6) and rhs[i][j+1][k][n] (3294:6)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at bt.c(3290,5)
      remark #17109: LOOP WAS AUTO-PARALLELIZED
      remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ m k n i j } lastprivate={ } firstlastprivate={ } reduction={ }
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(3291,7)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
         remark #25015: Estimate of max trip count of loop=65

         LOOP BEGIN at bt.c(3292,2)
            remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
            remark #25436: completely unrolled by 5  

            LOOP BEGIN at bt.c(3293,4)
               remark #15344: loop was not vectorized: vector dependence prevents vectorization
               remark #15346: vector dependence: assumed FLOW dependence between rhs[i][j][k][m] (3294:6) and rhs[i][j][k][m] (3294:6)
               remark #15346: vector dependence: assumed ANTI dependence between rhs[i][j][k][m] (3294:6) and rhs[i][j][k][m] (3294:6)
               remark #25436: completely unrolled by 5  
            LOOP END

            LOOP BEGIN at bt.c(3293,4)
            LOOP END

            LOOP BEGIN at bt.c(3293,4)
            LOOP END

            LOOP BEGIN at bt.c(3293,4)
            LOOP END

            LOOP BEGIN at bt.c(3293,4)
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(3290,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(3291,7)
      remark #17107: loop was not parallelized: inner loop
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(3292,2)
         remark #17107: loop was not parallelized: inner loop
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
         remark #25436: completely unrolled by 5  

         LOOP BEGIN at bt.c(3293,4)
            remark #17104: loop was not parallelized: existence of parallel dependence
            remark #17106: parallel dependence: assumed FLOW dependence between rhs[i][j][k][m] (3294:6) and rhs[i][j][k][m] (3294:6)
            remark #17106: parallel dependence: assumed ANTI dependence between rhs[i][j][k][m] (3294:6) and rhs[i][j][k][m] (3294:6)
            remark #17106: parallel dependence: assumed OUTPUT dependence between rhs[i][j][k][m] (3294:6) and rhs[i][j][k][m] (3294:6)
            remark #17106: parallel dependence: assumed OUTPUT dependence between rhs[i][j][k][m] (3294:6) and rhs[i][j][k][m] (3294:6)
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 5  
         LOOP END

         LOOP BEGIN at bt.c(3293,4)
         LOOP END

         LOOP BEGIN at bt.c(3293,4)
         LOOP END

         LOOP BEGIN at bt.c(3293,4)
         LOOP END

         LOOP BEGIN at bt.c(3293,4)
         LOOP END
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

bt.c(3275,36):remark #34051: REGISTER ALLOCATION : [y_backsubstitute] bt.c:3275

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     286
            Global    :      41
            Local     :     245
        Regenerable   :      39
        Spilled       :       4
        
    Routine stack
        Variables     :      56 bytes*
            Reads     :       2 [7.45e+03 ~ 0.0%]
            Writes    :      14 [0.00e+00 ~ 0.0%]
        Spills        :      80 bytes*
            Reads     :      17 [1.21e+02 ~ 0.0%]
            Writes    :      17 [5.88e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: y_solve_cell(void)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (y_solve_cell(void)) [16/28=57.1%] bt.c(3306,32)
  -> (3332,7) binvcrhs(double (*)[5], double (*)[5], double *) (isz = 2146) (sz = 2155)
     [[ Unable to inline callsite  <1>]]
  -> (3351,2) matvec_sub(double (*)[5], double *, double *) (isz = 55) (sz = 64)
     [[ Unable to inline callsite  <1>]]
  -> (3357,2) matmul_sub(double (*)[5], double (*)[5], double (*)[5]) (isz = 232) (sz = 241)
     [[ Unable to inline callsite  <1>]]
  -> (3365,2) binvcrhs(double (*)[5], double (*)[5], double *) (isz = 2146) (sz = 2155)
     [[ Unable to inline callsite  <1>]]
  -> (3379,7) matvec_sub(double (*)[5], double *, double *) (isz = 55) (sz = 64)
     [[ Unable to inline callsite  <1>]]
  -> (3387,7) matmul_sub(double (*)[5], double (*)[5], double (*)[5]) (isz = 232) (sz = 241)
     [[ Unable to inline callsite  <1>]]
  -> (3394,7) binvrhs(double (*)[5], double *) (isz = 817) (sz = 824)
     [[ Unable to inline callsite  <1>]]


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at bt.c(3325,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:binvcrhs(double (*)[5], double (*)[5], double *) (3332:7) and call:binvcrhs(double (*)[5], double (*)[5], double *) (3332:7)
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:binvcrhs(double (*)[5], double (*)[5], double *) (3332:7) and call:binvcrhs(double (*)[5], double (*)[5], double *) (3332:7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at bt.c(3326,5)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #15382: vectorization support: call to function binvcrhs(double (*)[5], double (*)[5], double *) cannot be vectorized   [ bt.c(3332,7) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
   LOOP END
LOOP END

LOOP BEGIN at bt.c(3342,3)
   remark #25095: Loop Interchange not done due to: User Function Inside Loop Nest
   remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 3 ) --> ( 2 1 3 ) 
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:matvec_sub(double (*)[5], double *, double *) (3351:2) and call:binvcrhs(double (*)[5], double (*)[5], double *) (3365:2)
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:binvcrhs(double (*)[5], double (*)[5], double *) (3365:2) and call:matvec_sub(double (*)[5], double *, double *) (3351:2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at bt.c(3343,5)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed OUTPUT dependence between call:matvec_sub(double (*)[5], double *, double *) (3351:2) and call:binvcrhs(double (*)[5], double (*)[5], double *) (3365:2)
      remark #17106: parallel dependence: assumed OUTPUT dependence between call:binvcrhs(double (*)[5], double (*)[5], double *) (3365:2) and call:matvec_sub(double (*)[5], double *, double *) (3351:2)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at bt.c(3344,7)
         remark #17104: loop was not parallelized: existence of parallel dependence
         remark #15382: vectorization support: call to function matvec_sub(double (*)[5], double *, double *) cannot be vectorized   [ bt.c(3351,2) ]
         remark #15382: vectorization support: call to function matmul_sub(double (*)[5], double (*)[5], double (*)[5]) cannot be vectorized   [ bt.c(3357,2) ]
         remark #15382: vectorization support: call to function binvcrhs(double (*)[5], double (*)[5], double *) cannot be vectorized   [ bt.c(3365,2) ]
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(3373,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:matvec_sub(double (*)[5], double *, double *) (3379:7) and call:binvrhs(double (*)[5], double *) (3394:7)
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:binvrhs(double (*)[5], double *) (3394:7) and call:matvec_sub(double (*)[5], double *, double *) (3379:7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at bt.c(3374,5)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #15382: vectorization support: call to function matvec_sub(double (*)[5], double *, double *) cannot be vectorized   [ bt.c(3379,7) ]
      remark #15382: vectorization support: call to function matmul_sub(double (*)[5], double (*)[5], double (*)[5]) cannot be vectorized   [ bt.c(3387,7) ]
      remark #15382: vectorization support: call to function binvrhs(double (*)[5], double *) cannot be vectorized   [ bt.c(3394,7) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

bt.c(3306,32):remark #34051: REGISTER ALLOCATION : [y_solve_cell] bt.c:3306

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :      85
            Global    :      53
            Local     :      32
        Regenerable   :       4
        Spilled       :      32
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :     208 bytes*
            Reads     :      30 [1.25e+05 ~ 23.7%]
            Writes    :      30 [3.78e+04 ~ 7.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: lhsy(void)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (lhsy(void)) [17/28=60.7%] bt.c(1162,24)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at bt.c(1177,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between tmp1 (1181:2) and tmp1 (1181:2)
   remark #17106: parallel dependence: assumed OUTPUT dependence between tmp1 (1181:2) and tmp1 (1181:2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(1178,5)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed OUTPUT dependence between tmp1 (1181:2) and tmp1 (1181:2)
      remark #17106: parallel dependence: assumed OUTPUT dependence between tmp1 (1181:2) and tmp1 (1181:2)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(1179,7)
         remark #25084: Preprocess Loopnests: Moving Out Store    [ bt.c(1181,2) ]
         remark #25084: Preprocess Loopnests: Moving Out Store    [ bt.c(1182,2) ]
         remark #25084: Preprocess Loopnests: Moving Out Store    [ bt.c(1183,2) ]
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
         remark #25015: Estimate of max trip count of loop=64

         LOOP BEGIN at bt.c(1185,2)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 5  
         LOOP END

         LOOP BEGIN at bt.c(1234,2)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 5  
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(1278,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between tmp1 (1282:2) and tmp1 (1282:2)
   remark #17106: parallel dependence: assumed OUTPUT dependence between tmp1 (1282:2) and tmp1 (1282:2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(1279,5)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed OUTPUT dependence between tmp1 (1282:2) and tmp1 (1282:2)
      remark #17106: parallel dependence: assumed OUTPUT dependence between tmp1 (1282:2) and tmp1 (1282:2)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(1280,7)
         remark #25084: Preprocess Loopnests: Moving Out Store    [ bt.c(1282,2) ]
         remark #25084: Preprocess Loopnests: Moving Out Store    [ bt.c(1283,2) ]
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
         remark #25015: Estimate of max trip count of loop=64

         LOOP BEGIN at bt.c(1288,2)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 4  
         LOOP END

         LOOP BEGIN at bt.c(1333,2)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 4  
         LOOP END

         LOOP BEGIN at bt.c(1348,2)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 4  
         LOOP END

         LOOP BEGIN at bt.c(1377,2)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 4  
         LOOP END

         LOOP BEGIN at bt.c(1388,2)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 4  
         LOOP END

         LOOP BEGIN at bt.c(1433,2)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 4  
         LOOP END
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

bt.c(1162,24):remark #34051: REGISTER ALLOCATION : [lhsy] bt.c:1162

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rbp rsi rdi r8-r11 r13-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     432
            Global    :      61
            Local     :     371
        Regenerable   :       6
        Spilled       :      14
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      80 bytes*
            Reads     :      10 [1.71e+06 ~ 1.5%]
            Writes    :      10 [2.50e+03 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: y_solve(void)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (y_solve(void)) [18/28=64.3%] bt.c(3251,27)
  -> (3266,3) lhsy(void) (isz = 2245) (sz = 2248)
     [[ Unable to inline callsite  <1>]]
  -> (3267,3) y_solve_cell(void) (isz = 241) (sz = 244)
     [[ Unable to inline callsite  <1>]]
  -> (3268,3) y_backsubstitute(void) (isz = 96) (sz = 99)
     [[ Unable to inline callsite  <1>]]


    Report from: Code generation optimizations [cg]

bt.c(3251,27):remark #34051: REGISTER ALLOCATION : [y_solve] bt.c:3251

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    0[ reg_null]
        
    Routine temporaries
        Total         :       6
            Global    :       6
            Local     :       0
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: x_backsubstitute(void)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (x_backsubstitute(void)) [19/28=67.9%] bt.c(2640,36)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at bt.c(2654,3)
   remark #25101: Loop Interchange not done due to: Original Order seems proper
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between rhs[i][j][k][m] (2659:6) and rhs[i+1][j][k][n] (2659:6)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at bt.c(2655,5)
      remark #17109: LOOP WAS AUTO-PARALLELIZED
      remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ m k n j i } lastprivate={ } firstlastprivate={ } reduction={ }
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(2656,7)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
         remark #25015: Estimate of max trip count of loop=65

         LOOP BEGIN at bt.c(2657,2)
            remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
            remark #25436: completely unrolled by 5  

            LOOP BEGIN at bt.c(2658,4)
               remark #15344: loop was not vectorized: vector dependence prevents vectorization
               remark #15346: vector dependence: assumed FLOW dependence between rhs[i][j][k][m] (2659:6) and rhs[i][j][k][m] (2659:6)
               remark #15346: vector dependence: assumed ANTI dependence between rhs[i][j][k][m] (2659:6) and rhs[i][j][k][m] (2659:6)
               remark #25436: completely unrolled by 5  
            LOOP END

            LOOP BEGIN at bt.c(2658,4)
            LOOP END

            LOOP BEGIN at bt.c(2658,4)
            LOOP END

            LOOP BEGIN at bt.c(2658,4)
            LOOP END

            LOOP BEGIN at bt.c(2658,4)
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(2655,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(2656,7)
      remark #17107: loop was not parallelized: inner loop
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(2657,2)
         remark #17107: loop was not parallelized: inner loop
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
         remark #25436: completely unrolled by 5  

         LOOP BEGIN at bt.c(2658,4)
            remark #17104: loop was not parallelized: existence of parallel dependence
            remark #17106: parallel dependence: assumed FLOW dependence between rhs[i][j][k][m] (2659:6) and rhs[i][j][k][m] (2659:6)
            remark #17106: parallel dependence: assumed ANTI dependence between rhs[i][j][k][m] (2659:6) and rhs[i][j][k][m] (2659:6)
            remark #17106: parallel dependence: assumed OUTPUT dependence between rhs[i][j][k][m] (2659:6) and rhs[i][j][k][m] (2659:6)
            remark #17106: parallel dependence: assumed OUTPUT dependence between rhs[i][j][k][m] (2659:6) and rhs[i][j][k][m] (2659:6)
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 5  
         LOOP END

         LOOP BEGIN at bt.c(2658,4)
         LOOP END

         LOOP BEGIN at bt.c(2658,4)
         LOOP END

         LOOP BEGIN at bt.c(2658,4)
         LOOP END

         LOOP BEGIN at bt.c(2658,4)
         LOOP END
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

bt.c(2640,36):remark #34051: REGISTER ALLOCATION : [x_backsubstitute] bt.c:2640

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     286
            Global    :      41
            Local     :     245
        Regenerable   :      39
        Spilled       :       3
        
    Routine stack
        Variables     :      56 bytes*
            Reads     :       2 [7.45e+03 ~ 0.0%]
            Writes    :      14 [0.00e+00 ~ 0.0%]
        Spills        :      72 bytes*
            Reads     :      16 [1.21e+02 ~ 0.0%]
            Writes    :      16 [6.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: x_solve_cell(void)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (x_solve_cell(void)) [20/28=71.4%] bt.c(2671,32)
  -> (2697,7) binvcrhs(double (*)[5], double (*)[5], double *) (isz = 2146) (sz = 2155)
     [[ Unable to inline callsite  <1>]]
  -> (2714,2) matvec_sub(double (*)[5], double *, double *) (isz = 55) (sz = 64)
     [[ Unable to inline callsite  <1>]]
  -> (2720,2) matmul_sub(double (*)[5], double (*)[5], double (*)[5]) (isz = 232) (sz = 241)
     [[ Unable to inline callsite  <1>]]
  -> (2729,2) binvcrhs(double (*)[5], double (*)[5], double *) (isz = 2146) (sz = 2155)
     [[ Unable to inline callsite  <1>]]
  -> (2743,7) matvec_sub(double (*)[5], double *, double *) (isz = 55) (sz = 64)
     [[ Unable to inline callsite  <1>]]
  -> (2749,7) matmul_sub(double (*)[5], double (*)[5], double (*)[5]) (isz = 232) (sz = 241)
     [[ Unable to inline callsite  <1>]]
  -> (2756,7) binvrhs(double (*)[5], double *) (isz = 817) (sz = 824)
     [[ Unable to inline callsite  <1>]]


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at bt.c(2690,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:binvcrhs(double (*)[5], double (*)[5], double *) (2697:7) and call:binvcrhs(double (*)[5], double (*)[5], double *) (2697:7)
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:binvcrhs(double (*)[5], double (*)[5], double *) (2697:7) and call:binvcrhs(double (*)[5], double (*)[5], double *) (2697:7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at bt.c(2691,5)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #15382: vectorization support: call to function binvcrhs(double (*)[5], double (*)[5], double *) cannot be vectorized   [ bt.c(2697,7) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
   LOOP END
LOOP END

LOOP BEGIN at bt.c(2707,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:matvec_sub(double (*)[5], double *, double *) (2714:2) and call:binvcrhs(double (*)[5], double (*)[5], double *) (2729:2)
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:binvcrhs(double (*)[5], double (*)[5], double *) (2729:2) and call:matvec_sub(double (*)[5], double *, double *) (2714:2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at bt.c(2708,5)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed OUTPUT dependence between call:matvec_sub(double (*)[5], double *, double *) (2714:2) and call:binvcrhs(double (*)[5], double (*)[5], double *) (2729:2)
      remark #17106: parallel dependence: assumed OUTPUT dependence between call:binvcrhs(double (*)[5], double (*)[5], double *) (2729:2) and call:matvec_sub(double (*)[5], double *, double *) (2714:2)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at bt.c(2709,7)
         remark #17104: loop was not parallelized: existence of parallel dependence
         remark #15382: vectorization support: call to function matvec_sub(double (*)[5], double *, double *) cannot be vectorized   [ bt.c(2714,2) ]
         remark #15382: vectorization support: call to function matmul_sub(double (*)[5], double (*)[5], double (*)[5]) cannot be vectorized   [ bt.c(2720,2) ]
         remark #15382: vectorization support: call to function binvcrhs(double (*)[5], double (*)[5], double *) cannot be vectorized   [ bt.c(2729,2) ]
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(2737,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:matvec_sub(double (*)[5], double *, double *) (2743:7) and call:binvrhs(double (*)[5], double *) (2756:7)
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:binvrhs(double (*)[5], double *) (2756:7) and call:matvec_sub(double (*)[5], double *, double *) (2743:7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at bt.c(2738,5)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #15382: vectorization support: call to function matvec_sub(double (*)[5], double *, double *) cannot be vectorized   [ bt.c(2743,7) ]
      remark #15382: vectorization support: call to function matmul_sub(double (*)[5], double (*)[5], double (*)[5]) cannot be vectorized   [ bt.c(2749,7) ]
      remark #15382: vectorization support: call to function binvrhs(double (*)[5], double *) cannot be vectorized   [ bt.c(2756,7) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

bt.c(2671,32):remark #34051: REGISTER ALLOCATION : [x_solve_cell] bt.c:2671

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :      91
            Global    :      55
            Local     :      36
        Regenerable   :       4
        Spilled       :      34
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :     224 bytes*
            Reads     :      32 [1.25e+05 ~ 23.7%]
            Writes    :      32 [3.77e+04 ~ 7.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: lhsx(void)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (lhsx(void)) [21/28=75.0%] bt.c(880,24)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at bt.c(894,3)
   remark #25101: Loop Interchange not done due to: Original Order seems proper
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between tmp1 (898:2) and tmp1 (991:2)
   remark #17106: parallel dependence: assumed OUTPUT dependence between tmp1 (991:2) and tmp1 (898:2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(895,5)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed OUTPUT dependence between tmp1 (898:2) and tmp1 (991:2)
      remark #17106: parallel dependence: assumed OUTPUT dependence between tmp1 (991:2) and tmp1 (898:2)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=64

      LOOP BEGIN at bt.c(896,7)
         remark #25084: Preprocess Loopnests: Moving Out Store    [ bt.c(898,2) ]
         remark #25084: Preprocess Loopnests: Moving Out Store    [ bt.c(899,2) ]
         remark #25084: Preprocess Loopnests: Moving Out Store    [ bt.c(900,2) ]
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
         remark #25015: Estimate of max trip count of loop=65

         LOOP BEGIN at bt.c(904,2)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 5  
         LOOP END

         LOOP BEGIN at bt.c(949,2)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 5  
         LOOP END
      LOOP END

      LOOP BEGIN at bt.c(989,7)
         remark #25084: Preprocess Loopnests: Moving Out Store    [ bt.c(991,2) ]
         remark #25084: Preprocess Loopnests: Moving Out Store    [ bt.c(992,2) ]
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
         remark #25015: Estimate of max trip count of loop=65

         LOOP BEGIN at bt.c(997,2)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 4  
         LOOP END

         LOOP BEGIN at bt.c(1042,2)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 4  
         LOOP END

         LOOP BEGIN at bt.c(1057,2)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 4  
         LOOP END

         LOOP BEGIN at bt.c(1086,2)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 4  
         LOOP END

         LOOP BEGIN at bt.c(1097,2)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 4  
         LOOP END

         LOOP BEGIN at bt.c(1142,2)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 4  
         LOOP END
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

bt.c(880,24):remark #34051: REGISTER ALLOCATION : [lhsx] bt.c:880

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     429
            Global    :      57
            Local     :     372
        Regenerable   :       6
        Spilled       :      33
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :     264 bytes*
            Reads     :      63 [1.94e+06 ~ 1.7%]
            Writes    :      35 [8.44e+03 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: x_solve(void)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (x_solve(void)) [22/28=78.6%] bt.c(2614,27)
  -> (2631,3) lhsx(void) (isz = 2215) (sz = 2218)
     [[ Unable to inline callsite  <1>]]
  -> (2632,3) x_solve_cell(void) (isz = 241) (sz = 244)
     [[ Unable to inline callsite  <1>]]
  -> (2633,3) x_backsubstitute(void) (isz = 96) (sz = 99)
     [[ Unable to inline callsite  <1>]]


    Report from: Code generation optimizations [cg]

bt.c(2614,27):remark #34051: REGISTER ALLOCATION : [x_solve] bt.c:2614

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    0[ reg_null]
        
    Routine temporaries
        Total         :       6
            Global    :       6
            Local     :       0
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: adi(void)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (adi(void)) [23/28=82.1%] bt.c(201,23)
  -> (202,5) compute_rhs(void) (isz = 2791) (sz = 2794)
     [[ Unable to inline callsite  <1>]]
  -> (204,5) x_solve(void) (isz = 2) (sz = 5)
     [[ Unable to inline callsite  <1>]]
  -> (206,5) y_solve(void) (isz = 2) (sz = 5)
     [[ Unable to inline callsite  <1>]]
  -> (208,5) z_solve(void) (isz = 2) (sz = 5)
     [[ Unable to inline callsite  <1>]]
  -> (210,5) add(void) (isz = 77) (sz = 80)
     [[ Unable to inline callsite  <1>]]


    Report from: Code generation optimizations [cg]

bt.c(201,23):remark #34051: REGISTER ALLOCATION : [adi] bt.c:201

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    0[ reg_null]
        
    Routine temporaries
        Total         :       6
            Global    :       6
            Local     :       0
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: initialize(void)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (initialize(void)) [24/28=85.7%] bt.c(657,30)
  -> (701,4) exact_solution(double, double, double, double *) (isz = 62) (sz = 73)
     [[ Unable to inline callsite  <1>]]
  -> (706,4) exact_solution(double, double, double, double *) (isz = 62) (sz = 73)
     [[ Unable to inline callsite  <1>]]
  -> (711,4) exact_solution(double, double, double, double *) (isz = 62) (sz = 73)
     [[ Unable to inline callsite  <1>]]
  -> (744,7) exact_solution(double, double, double, double *) (isz = 62) (sz = 73)
     [[ Unable to inline callsite  <1>]]
  -> (761,7) exact_solution(double, double, double, double *) (isz = 62) (sz = 73)
     [[ Unable to inline callsite  <1>]]
  -> (777,7) exact_solution(double, double, double, double *) (isz = 62) (sz = 73)
     [[ Unable to inline callsite  <1>]]
  -> (793,7) exact_solution(double, double, double, double *) (isz = 62) (sz = 73)
     [[ Unable to inline callsite  <1>]]
  -> (809,7) exact_solution(double, double, double, double *) (isz = 62) (sz = 73)
     [[ Unable to inline callsite  <1>]]
  -> (825,7) exact_solution(double, double, double, double *) (isz = 62) (sz = 73)
     [[ Unable to inline callsite  <1>]]


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at bt.c(677,3)
   remark #25101: Loop Interchange not done due to: Original Order seems proper
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at bt.c(678,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=64

      LOOP BEGIN at bt.c(679,7)
         remark #25420: Collapsed with loop at line 680 
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25438: unrolled without remainder by 2  
         remark #25015: Estimate of max trip count of loop=320

         LOOP BEGIN at bt.c(680,2)
            remark #25421: Loop eliminated in Collapsing 

         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(691,3)
   remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact_solution(double, double, double, double *) (701:4) and call:exact_solution(double, double, double, double *) (711:4)
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact_solution(double, double, double, double *) (711:4) and call:exact_solution(double, double, double, double *) (701:4)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at bt.c(694,5)
      remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
      remark #25452: Original Order found to be proper, but by a close margin
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact_solution(double, double, double, double *) (701:4) and call:exact_solution(double, double, double, double *) (711:4)
      remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact_solution(double, double, double, double *) (711:4) and call:exact_solution(double, double, double, double *) (701:4)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at bt.c(697,7)
         remark #17104: loop was not parallelized: existence of parallel dependence
         remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact_solution(double, double, double, double *) (701:4) and call:exact_solution(double, double, double, double *) (711:4)
         remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact_solution(double, double, double, double *) (711:4) and call:exact_solution(double, double, double, double *) (701:4)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at bt.c(700,2)
            remark #17104: loop was not parallelized: existence of parallel dependence
            remark #15382: vectorization support: call to function exact_solution(double, double, double, double *) cannot be vectorized   [ bt.c(701,4) ]
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
         LOOP END

         LOOP BEGIN at bt.c(705,2)
            remark #17104: loop was not parallelized: existence of parallel dependence
            remark #15382: vectorization support: call to function exact_solution(double, double, double, double *) cannot be vectorized   [ bt.c(706,4) ]
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
         LOOP END

         LOOP BEGIN at bt.c(710,2)
            remark #17104: loop was not parallelized: existence of parallel dependence
            remark #15382: vectorization support: call to function exact_solution(double, double, double, double *) cannot be vectorized   [ bt.c(711,4) ]
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
         LOOP END

         LOOP BEGIN at bt.c(715,2)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 5  
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(740,3)
   remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact_solution(double, double, double, double *) (744:7) and call:exact_solution(double, double, double, double *) (744:7)
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact_solution(double, double, double, double *) (744:7) and call:exact_solution(double, double, double, double *) (744:7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at bt.c(742,5)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at bt.c(745,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25436: completely unrolled by 5  
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(757,3)
   remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact_solution(double, double, double, double *) (761:7) and call:exact_solution(double, double, double, double *) (761:7)
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact_solution(double, double, double, double *) (761:7) and call:exact_solution(double, double, double, double *) (761:7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at bt.c(759,5)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at bt.c(762,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25436: completely unrolled by 5  
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(773,3)
   remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact_solution(double, double, double, double *) (777:7) and call:exact_solution(double, double, double, double *) (777:7)
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact_solution(double, double, double, double *) (777:7) and call:exact_solution(double, double, double, double *) (777:7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at bt.c(775,5)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at bt.c(778,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25436: completely unrolled by 5  
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(789,3)
   remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact_solution(double, double, double, double *) (793:7) and call:exact_solution(double, double, double, double *) (793:7)
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact_solution(double, double, double, double *) (793:7) and call:exact_solution(double, double, double, double *) (793:7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at bt.c(791,5)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at bt.c(794,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25436: completely unrolled by 5  
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(805,3)
   remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact_solution(double, double, double, double *) (809:7) and call:exact_solution(double, double, double, double *) (809:7)
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact_solution(double, double, double, double *) (809:7) and call:exact_solution(double, double, double, double *) (809:7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at bt.c(807,5)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at bt.c(810,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25436: completely unrolled by 5  
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(821,3)
   remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact_solution(double, double, double, double *) (825:7) and call:exact_solution(double, double, double, double *) (825:7)
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact_solution(double, double, double, double *) (825:7) and call:exact_solution(double, double, double, double *) (825:7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at bt.c(823,5)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at bt.c(826,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25436: completely unrolled by 5  
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

bt.c(657,30):remark #34051: REGISTER ALLOCATION : [initialize] bt.c:657

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     309
            Global    :      75
            Local     :     234
        Regenerable   :      22
        Spilled       :      26
        
    Routine stack
        Variables     :     280 bytes*
            Reads     :      60 [5.75e+06 ~ 11.5%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :     160 bytes*
            Reads     :      65 [4.94e+06 ~ 9.9%]
            Writes    :      44 [1.14e+06 ~ 2.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: exact_rhs(void)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (exact_rhs(void)) [25/28=89.3%] bt.c(292,29)
  -> (330,2) exact_solution(double, double, double, double *) (isz = 62) (sz = 73)
     [[ Unable to inline callsite  <1>]]
  -> (428,2) exact_solution(double, double, double, double *) (isz = 62) (sz = 73)
     [[ Unable to inline callsite  <1>]]
  -> (527,2) exact_solution(double, double, double, double *) (isz = 62) (sz = 73)
     [[ Unable to inline callsite  <1>]]


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at bt.c(308,3)
   remark #25101: Loop Interchange not done due to: Original Order seems proper
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(309,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(310,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
         remark #25015: Estimate of max trip count of loop=65

         LOOP BEGIN at bt.c(311,2)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 5  
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(321,3)
   remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact_solution(double, double, double, double *) (330:2) and call:exact_solution(double, double, double, double *) (330:2)
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact_solution(double, double, double, double *) (330:2) and call:exact_solution(double, double, double, double *) (330:2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(324,5)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact_solution(double, double, double, double *) (330:2) and call:exact_solution(double, double, double, double *) (330:2)
      remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact_solution(double, double, double, double *) (330:2) and call:exact_solution(double, double, double, double *) (330:2)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(327,7)
         remark #17104: loop was not parallelized: existence of parallel dependence
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
         remark #25015: Estimate of max trip count of loop=64

         LOOP BEGIN at bt.c(331,2)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 5  
         LOOP END

         LOOP BEGIN at bt.c(337,2)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 4  
         LOOP END
      LOOP END

      LOOP BEGIN at bt.c(348,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=64
      LOOP END

      LOOP BEGIN at bt.c(385,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25436: completely unrolled by 5  
      LOOP END

      LOOP BEGIN at bt.c(396,2)
         remark #25444: Loopnest Interchanged: ( 1 2 ) --> ( 2 1 )
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive   [ bt.c(396,2) ]
         remark #25015: Estimate of max trip count of loop=64

         LOOP BEGIN at bt.c(395,7)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 5  
         LOOP END
      LOOP END

      LOOP BEGIN at bt.c(403,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25436: completely unrolled by 5  
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(419,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact_solution(double, double, double, double *) (428:2) and call:exact_solution(double, double, double, double *) (428:2)
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact_solution(double, double, double, double *) (428:2) and call:exact_solution(double, double, double, double *) (428:2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(422,5)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact_solution(double, double, double, double *) (428:2) and call:exact_solution(double, double, double, double *) (428:2)
      remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact_solution(double, double, double, double *) (428:2) and call:exact_solution(double, double, double, double *) (428:2)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(425,7)
         remark #17104: loop was not parallelized: existence of parallel dependence
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
         remark #25015: Estimate of max trip count of loop=64

         LOOP BEGIN at bt.c(429,2)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 5  
         LOOP END

         LOOP BEGIN at bt.c(435,2)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 4  
         LOOP END
      LOOP END

      LOOP BEGIN at bt.c(446,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=64
      LOOP END

      LOOP BEGIN at bt.c(483,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25436: completely unrolled by 5  
      LOOP END

      LOOP BEGIN at bt.c(494,2)
         remark #25444: Loopnest Interchanged: ( 1 2 ) --> ( 2 1 )
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive   [ bt.c(494,2) ]
         remark #25015: Estimate of max trip count of loop=64

         LOOP BEGIN at bt.c(493,7)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 5  
         LOOP END
      LOOP END

      LOOP BEGIN at bt.c(501,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25436: completely unrolled by 5  
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(518,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact_solution(double, double, double, double *) (527:2) and call:exact_solution(double, double, double, double *) (527:2)
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact_solution(double, double, double, double *) (527:2) and call:exact_solution(double, double, double, double *) (527:2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(521,5)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact_solution(double, double, double, double *) (527:2) and call:exact_solution(double, double, double, double *) (527:2)
      remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact_solution(double, double, double, double *) (527:2) and call:exact_solution(double, double, double, double *) (527:2)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(524,7)
         remark #17104: loop was not parallelized: existence of parallel dependence
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
         remark #25015: Estimate of max trip count of loop=64

         LOOP BEGIN at bt.c(528,2)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 5  
         LOOP END

         LOOP BEGIN at bt.c(534,2)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 4  
         LOOP END
      LOOP END

      LOOP BEGIN at bt.c(545,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=64
      LOOP END

      LOOP BEGIN at bt.c(582,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25436: completely unrolled by 5  
      LOOP END

      LOOP BEGIN at bt.c(593,2)
         remark #25444: Loopnest Interchanged: ( 1 2 ) --> ( 2 1 )
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive   [ bt.c(593,2) ]
         remark #25015: Estimate of max trip count of loop=64

         LOOP BEGIN at bt.c(592,7)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 5  
         LOOP END
      LOOP END

      LOOP BEGIN at bt.c(600,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25436: completely unrolled by 5  
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(616,3)
   remark #25101: Loop Interchange not done due to: Original Order seems proper
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(617,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(618,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
         remark #25015: Estimate of max trip count of loop=65

         LOOP BEGIN at bt.c(619,2)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 5  
         LOOP END
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

bt.c(292,29):remark #34051: REGISTER ALLOCATION : [exact_rhs] bt.c:292

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :    1372
            Global    :     147
            Local     :    1225
        Regenerable   :      25
        Spilled       :      80
        
    Routine stack
        Variables     :      40 bytes*
            Reads     :      15 [2.67e+06 ~ 2.2%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :     592 bytes*
            Reads     :      95 [6.91e+06 ~ 5.6%]
            Writes    :      90 [1.19e+05 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: lhsinit(void)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (lhsinit(void)) [26/28=92.9%] bt.c(837,27)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at bt.c(848,3)
   remark #25101: Loop Interchange not done due to: Original Order seems proper
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ j k m n i } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(849,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(850,7)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
         remark #25015: Estimate of max trip count of loop=65

         LOOP BEGIN at bt.c(851,2)
            remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
            remark #25436: completely unrolled by 5  

            LOOP BEGIN at bt.c(852,4)
               remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
               remark #25436: completely unrolled by 5  
            LOOP END

            LOOP BEGIN at bt.c(852,4)
            LOOP END

            LOOP BEGIN at bt.c(852,4)
            LOOP END

            LOOP BEGIN at bt.c(852,4)
            LOOP END

            LOOP BEGIN at bt.c(852,4)
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(865,3)
   remark #25101: Loop Interchange not done due to: Original Order seems proper
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(866,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(867,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
         remark #25015: Estimate of max trip count of loop=65

         LOOP BEGIN at bt.c(868,2)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 5  
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bt.c(848,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at bt.c(849,5)
      remark #17107: loop was not parallelized: inner loop
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at bt.c(850,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
         remark #25015: Estimate of max trip count of loop=65

         LOOP BEGIN at bt.c(851,2)
            remark #17107: loop was not parallelized: inner loop
            remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
            remark #25436: completely unrolled by 5  

            LOOP BEGIN at bt.c(852,4)
               remark #17107: loop was not parallelized: inner loop
               remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
               remark #25436: completely unrolled by 5  
            LOOP END

            LOOP BEGIN at bt.c(852,4)
            LOOP END

            LOOP BEGIN at bt.c(852,4)
            LOOP END

            LOOP BEGIN at bt.c(852,4)
            LOOP END

            LOOP BEGIN at bt.c(852,4)
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

bt.c(837,27):remark #34051: REGISTER ALLOCATION : [lhsinit] bt.c:837

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :     107
            Global    :      41
            Local     :      66
        Regenerable   :      42
        Spilled       :       0
        
    Routine stack
        Variables     :      52 bytes*
            Reads     :       2 [1.10e+02 ~ 0.0%]
            Writes    :      13 [0.00e+00 ~ 0.0%]
        Spills        :      48 bytes*
            Reads     :      12 [6.00e+00 ~ 0.0%]
            Writes    :      12 [5.08e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: set_constants(void)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (set_constants(void)) [27/28=96.4%] bt.c(2147,33)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at bt.c(2152,3)
   remark #25399: memcopy generated
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at bt.c(2166,3)
   remark #25399: memcopy generated
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at bt.c(2180,3)
   remark #25399: memcopy generated
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at bt.c(2194,3)
   remark #25399: memcopy generated
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at bt.c(2208,3)
   remark #25399: memcopy generated
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy
   remark #25015: Estimate of max trip count of loop=1
LOOP END

    Report from: Code generation optimizations [cg]

bt.c(2152,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (32, 0)
bt.c(2166,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (32, 8)
bt.c(2180,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (32, 16)
bt.c(2194,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (32, 24)
bt.c(2208,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (32, 0)
bt.c(2147,33):remark #34051: REGISTER ALLOCATION : [set_constants] bt.c:2147

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   25[ rax rdx rcx rsi rdi r8-r11 zmm0-zmm15]
        
    Routine temporaries
        Total         :     131
            Global    :       6
            Local     :     125
        Regenerable   :      52
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: main(int, char **)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (main(int, char **)) [28/28=100.0%] bt.c(74,33)
  -> EXTERN: (90,3) printf(const char *__restrict__, ...)
  -> EXTERN: (93,8) fopen(const char *__restrict__, const char *__restrict__)
  -> EXTERN: (95,5) printf(const char *__restrict__, ...)
  -> EXTERN: (96,5) fscanf(FILE *__restrict__, const char *__restrict__, ...)
  -> EXTERN: (97,12) fgetc(FILE *)
  -> EXTERN: (97,12) fgetc(FILE *)
  -> EXTERN: (98,5) fscanf(FILE *__restrict__, const char *__restrict__, ...)
  -> EXTERN: (99,12) fgetc(FILE *)
  -> EXTERN: (99,12) fgetc(FILE *)
  -> EXTERN: (100,5) fscanf(FILE *__restrict__, const char *__restrict__, ...)
  -> EXTERN: (102,5) fclose(FILE *)
  -> EXTERN: (104,5) printf(const char *__restrict__, ...)
  -> EXTERN: (113,3) printf(const char *__restrict__, ...)
  -> EXTERN: (115,3) printf(const char *__restrict__, ...)
  -> EXTERN: (120,5) printf(const char *__restrict__, ...)
  -> EXTERN: (121,5) printf(const char *__restrict__, ...)
  -> EXTERN: (122,5) exit(int)
  -> (125,3) set_constants(void) (isz = 390) (sz = 393)
     [[ Unable to inline callsite  <1>]]
  -> (127,3) initialize(void) (isz = 631) (sz = 634)
     [[ Unable to inline callsite  <1>]]
  -> (128,3) lhsinit(void) (isz = 156) (sz = 159)
     [[ Unable to inline callsite  <1>]]
  -> (129,3) exact_rhs(void) (isz = 1960) (sz = 1963)
     [[ Unable to inline callsite  <1>]]
  -> (135,3) adi(void) (isz = 4) (sz = 7)
     [[ Unable to inline callsite  <1>]]
  -> (137,3) initialize(void) (isz = 631) (sz = 634)
     [[ Unable to inline callsite  <1>]]
  -> EXTERN: (139,3) timer_clear(int)
  -> EXTERN: (140,3) timer_start(int)
  -> EXTERN: (145,7) printf(const char *__restrict__, ...)
  -> (147,5) adi(void) (isz = 4) (sz = 7)
     [[ Unable to inline callsite  <1>]]
  -> EXTERN: (152,14) omp_get_num_threads(void)
  -> EXTERN: (156,3) timer_stop(int)
  -> EXTERN: (157,10) timer_read(int)
  -> (159,3) verify(int, char *, boolean *) (isz = 460) (sz = 469)
     [[ Unable to inline callsite  <1>]]
  -> EXTERN: (169,3) c_print_results(char *, char, int, int, int, int, int, double, double, char *, int, char *, char *, char *, char *, char *, char *, char *, char *, char *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at bt.c(97,5)
   remark #17102: loop was not parallelized: not a parallelization candidate
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at bt.c(99,5)
   remark #17102: loop was not parallelized: not a parallelization candidate
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at bt.c(142,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #15382: vectorization support: call to function printf(const char *__restrict__, ...) cannot be vectorized   [ bt.c(145,7) ]
   remark #15382: vectorization support: call to function adi(void) cannot be vectorized   [ bt.c(147,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

    Report from: Code generation optimizations [cg]

bt.c(74,33):remark #34051: REGISTER ALLOCATION : [main] bt.c:74

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rsi rdi r8-r10 r12-r13 zmm0-zmm2]
        
    Routine temporaries
        Total         :     160
            Global    :      38
            Local     :     122
        Regenerable   :      70
        Spilled       :       4
        
    Routine stack
        Variables     :      13 bytes*
            Reads     :       8 [3.14e+00 ~ 1.8%]
            Writes    :       3 [1.20e-01 ~ 0.1%]
        Spills        :      16 bytes*
            Reads     :       4 [2.28e+00 ~ 1.3%]
            Writes    :       3 [1.45e+00 ~ 0.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

    Report from: Interprocedural optimizations [ipo]

INLINING FOOTNOTES:

<1> Inlining the function will lead to incorrect program behavior.

