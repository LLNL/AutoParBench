Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 19.0.4.243 Build 20190416

Compiler options: -w -no-vec -fno-inline -parallel -qopt-report-phase=all -qopt-report=5 -c

    Report from: Interprocedural optimizations [ipo]

  WHOLE PROGRAM (SAFE) [EITHER METHOD]: false
  WHOLE PROGRAM (SEEN) [TABLE METHOD]: false
  WHOLE PROGRAM (READ) [OBJECT READER METHOD]: false

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000

In the inlining report below:
   "sz" refers to the "size" of the routine. The smaller a routine's size,
      the more likely it is to be inlined.
   "isz" refers to the "inlined size" of the routine. This is the amount
      the calling routine will grow if the called routine is inlined into it.
      The compiler generally limits the amount a routine can grow by having
      routines inlined into it.

Begin optimization report for: verify(double *, double *, double, char *, boolean *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (verify(double *, double *, double, char *, boolean *)) [1/18=5.6%] lu.c(3177,38)
  -> EXTERN: (3377,5) printf(const char *__restrict__, ...)
  -> EXTERN: (3378,5) printf(const char *__restrict__, ...)
  -> EXTERN: (3382,7) printf(const char *__restrict__, ...)
  -> EXTERN: (3385,5) printf(const char *__restrict__, ...)
  -> EXTERN: (3389,5) printf(const char *__restrict__, ...)
  -> EXTERN: (3391,5) printf(const char *__restrict__, ...)
  -> EXTERN: (3396,7) printf(const char *__restrict__, ...)
  -> EXTERN: (3399,7) printf(const char *__restrict__, ...)
  -> EXTERN: (3402,7) printf(const char *__restrict__, ...)
  -> EXTERN: (3408,5) printf(const char *__restrict__, ...)
  -> EXTERN: (3410,5) printf(const char *__restrict__, ...)
  -> EXTERN: (3415,7) printf(const char *__restrict__, ...)
  -> EXTERN: (3418,7) printf(const char *__restrict__, ...)
  -> EXTERN: (3421,7) printf(const char *__restrict__, ...)
  -> EXTERN: (3427,5) printf(const char *__restrict__, ...)
  -> EXTERN: (3429,5) printf(const char *__restrict__, ...)
  -> EXTERN: (3433,5) printf(const char *__restrict__, ...)
  -> EXTERN: (3436,5) printf(const char *__restrict__, ...)
  -> EXTERN: (3439,5) printf(const char *__restrict__, ...)
  -> EXTERN: (3443,5) printf(const char *__restrict__, ...)
  -> EXTERN: (3444,5) printf(const char *__restrict__, ...)
  -> EXTERN: (3446,5) printf(const char *__restrict__, ...)
  -> EXTERN: (3448,5) printf(const char *__restrict__, ...)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at lu.c(3196,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25436: completely unrolled by 5  
LOOP END

LOOP BEGIN at lu.c(3364,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25436: completely unrolled by 5  
LOOP END

LOOP BEGIN at lu.c(3394,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #15382: vectorization support: call to function printf(const char *__restrict__, ...) cannot be vectorized   [ lu.c(3396,7) ]
   remark #15382: vectorization support: call to function printf(const char *__restrict__, ...) cannot be vectorized   [ lu.c(3399,7) ]
   remark #15382: vectorization support: call to function printf(const char *__restrict__, ...) cannot be vectorized   [ lu.c(3402,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #25436: completely unrolled by 5  
LOOP END

LOOP BEGIN at lu.c(3413,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #15382: vectorization support: call to function printf(const char *__restrict__, ...) cannot be vectorized   [ lu.c(3415,7) ]
   remark #15382: vectorization support: call to function printf(const char *__restrict__, ...) cannot be vectorized   [ lu.c(3418,7) ]
   remark #15382: vectorization support: call to function printf(const char *__restrict__, ...) cannot be vectorized   [ lu.c(3421,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #25436: completely unrolled by 5  
LOOP END

    Report from: Code generation optimizations [cg]

lu.c(3177,38):remark #34051: REGISTER ALLOCATION : [verify] lu.c:3177

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   25[ rax rdx rcx rbx rsi rdi r13-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     347
            Global    :      37
            Local     :     310
        Regenerable   :     162
        Spilled       :      28
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :     192 bytes*
            Reads     :      72 [4.53e+01 ~ 15.8%]
            Writes    :      84 [2.40e+01 ~ 8.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: pintgr(void)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (pintgr(void)) [2/18=11.1%] lu.c(2014,26)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at lu.c(2055,3)
   remark #25420: Collapsed with loop at line 2056 
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ phi1 phi2 } private={ } firstprivate={ k i } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25438: unrolled without remainder by 2  
   remark #25015: Estimate of max trip count of loop=4356

   LOOP BEGIN at lu.c(2056,5)
      remark #25421: Loop eliminated in Collapsing 

   LOOP END
LOOP END

LOOP BEGIN at lu.c(2061,3)
   remark #25082: Preprocess Loopnests: Moving Out Simple Stmts From Loop  
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 phi1 phi2 } private={ } firstprivate={ ibeg ifin j jbeg ki1 ki2 jfin i } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at lu.c(2063,5)
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      remark #25015: Estimate of max trip count of loop=65
   LOOP END
LOOP END

LOOP BEGIN at lu.c(2086,3)
   remark #25082: Preprocess Loopnests: Moving Out Simple Stmts From Loop  
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=66

   LOOP BEGIN at lu.c(2087,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 4
      remark #25015: Estimate of max trip count of loop=66
   LOOP END
LOOP END

LOOP BEGIN at lu.c(2104,3)
   remark #25420: Collapsed with loop at line 2105 
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ phi1 phi2 } private={ } firstprivate={ k i } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25438: unrolled without remainder by 2  
   remark #25015: Estimate of max trip count of loop=4356

   LOOP BEGIN at lu.c(2105,5)
      remark #25421: Loop eliminated in Collapsing 

   LOOP END
LOOP END

LOOP BEGIN at lu.c(2112,5)
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 phi1 } private={ } firstprivate={ ibeg ifin k jbeg ki1 ki2 i } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at lu.c(2114,7)
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      remark #25015: Estimate of max trip count of loop=65
   LOOP END
LOOP END

LOOP BEGIN at lu.c(2126,5)
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 phi2 } private={ } firstprivate={ ibeg ifin k jfin ki1 ki2 i } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at lu.c(2128,7)
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      remark #25015: Estimate of max trip count of loop=65
   LOOP END
LOOP END

LOOP BEGIN at lu.c(2140,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=66

   LOOP BEGIN at lu.c(2141,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 4
      remark #25015: Estimate of max trip count of loop=66
   LOOP END
LOOP END

LOOP BEGIN at lu.c(2159,3)
   remark #25420: Collapsed with loop at line 2160 
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ phi1 phi2 } private={ } firstprivate={ k i } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25438: unrolled without remainder by 2  
   remark #25015: Estimate of max trip count of loop=4356

   LOOP BEGIN at lu.c(2160,5)
      remark #25421: Loop eliminated in Collapsing 

   LOOP END
LOOP END

LOOP BEGIN at lu.c(2167,5)
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 phi1 } private={ } firstprivate={ jbeg jfin k ibeg ki1 ki2 j } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at lu.c(2169,7)
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      remark #25015: Estimate of max trip count of loop=65
   LOOP END
LOOP END

LOOP BEGIN at lu.c(2181,5)
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 phi2 } private={ } firstprivate={ jbeg jfin k ifin ki1 ki2 j } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at lu.c(2183,7)
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      remark #25015: Estimate of max trip count of loop=65
   LOOP END
LOOP END

LOOP BEGIN at lu.c(2195,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=66

   LOOP BEGIN at lu.c(2196,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 4
      remark #25015: Estimate of max trip count of loop=66
   LOOP END
LOOP END

LOOP BEGIN at lu.c(2055,3)
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25439: unrolled with remainder by 2  
   remark #25015: Estimate of max trip count of loop=4356
LOOP END

LOOP BEGIN at lu.c(2055,3)
<Remainder>
   remark #25015: Estimate of max trip count of loop=4356
LOOP END

LOOP BEGIN at lu.c(2061,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at lu.c(2063,5)
      remark #17107: loop was not parallelized: inner loop
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      remark #25015: Estimate of max trip count of loop=65
   LOOP END
LOOP END

LOOP BEGIN at lu.c(2104,3)
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25439: unrolled with remainder by 2  
   remark #25015: Estimate of max trip count of loop=4356
LOOP END

LOOP BEGIN at lu.c(2104,3)
<Remainder>
   remark #25015: Estimate of max trip count of loop=4356
LOOP END

LOOP BEGIN at lu.c(2112,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at lu.c(2114,7)
      remark #17107: loop was not parallelized: inner loop
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      remark #25015: Estimate of max trip count of loop=65
   LOOP END
LOOP END

LOOP BEGIN at lu.c(2126,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at lu.c(2128,7)
      remark #17107: loop was not parallelized: inner loop
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      remark #25015: Estimate of max trip count of loop=65
   LOOP END
LOOP END

LOOP BEGIN at lu.c(2159,3)
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25439: unrolled with remainder by 2  
   remark #25015: Estimate of max trip count of loop=4356
LOOP END

LOOP BEGIN at lu.c(2159,3)
<Remainder>
   remark #25015: Estimate of max trip count of loop=4356
LOOP END

LOOP BEGIN at lu.c(2167,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at lu.c(2169,7)
      remark #17107: loop was not parallelized: inner loop
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      remark #25015: Estimate of max trip count of loop=65
   LOOP END
LOOP END

LOOP BEGIN at lu.c(2181,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at lu.c(2183,7)
      remark #17107: loop was not parallelized: inner loop
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      remark #25015: Estimate of max trip count of loop=65
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

lu.c(2014,26):remark #34051: REGISTER ALLOCATION : [pintgr] lu.c:2014

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   29[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm13]
        
    Routine temporaries
        Total         :    1170
            Global    :     352
            Local     :     818
        Regenerable   :     320
        Spilled       :      55
        
    Routine stack
        Variables     :   70084 bytes*
            Reads     :      28 [2.65e+04 ~ 3.1%]
            Writes    :     103 [2.61e+04 ~ 3.1%]
        Spills        :     464 bytes*
            Reads     :     233 [5.65e+02 ~ 0.1%]
            Writes    :     205 [1.46e+02 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: exact(int, int, int, double *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (exact(int, int, int, double *)) [3/18=16.7%] lu.c(1184,61)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at lu.c(1202,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25436: completely unrolled by 5  
LOOP END

    Report from: Code generation optimizations [cg]

lu.c(1184,61):remark #34051: REGISTER ALLOCATION : [exact] lu.c:1184

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   23[ rax rdx rcx rsi rdi r8-r9 zmm0-zmm15]
        
    Routine temporaries
        Total         :     164
            Global    :       0
            Local     :     164
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: error(void)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (error(void)) [4/18=22.2%] lu.c(1142,25)
  -> (1167,2) exact(int, int, int, double *) (isz = 95) (sz = 106)
     [[ Unable to inline callsite  <1>]]


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at lu.c(1158,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25436: completely unrolled by 5  
LOOP END

LOOP BEGIN at lu.c(1162,3)
   remark #25095: Loop Interchange not done due to: User Function Inside Loop Nest
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact(int, int, int, double *) (1167:2) and call:exact(int, int, int, double *) (1167:2)
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact(int, int, int, double *) (1167:2) and call:exact(int, int, int, double *) (1167:2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at lu.c(1164,5)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact(int, int, int, double *) (1167:2) and call:exact(int, int, int, double *) (1167:2)
      remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact(int, int, int, double *) (1167:2) and call:exact(int, int, int, double *) (1167:2)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at lu.c(1166,7)
         remark #17104: loop was not parallelized: existence of parallel dependence
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at lu.c(1168,2)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 5  
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at lu.c(1176,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25436: completely unrolled by 5  
LOOP END

    Report from: Code generation optimizations [cg]

lu.c(1142,25):remark #34051: REGISTER ALLOCATION : [error] lu.c:1142

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   25[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm9]
        
    Routine temporaries
        Total         :      84
            Global    :      38
            Local     :      46
        Regenerable   :       3
        Spilled       :      23
        
    Routine stack
        Variables     :      40 bytes*
            Reads     :       5 [6.25e+02 ~ 9.9%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :     168 bytes*
            Reads     :      21 [7.73e+02 ~ 12.3%]
            Writes    :      21 [7.73e+02 ~ 12.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: rhs(void)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (rhs(void)) [5/18=27.8%] lu.c(2302,23)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at lu.c(2327,3)
   remark #25101: Loop Interchange not done due to: Original Order seems proper
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at lu.c(2328,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at lu.c(2329,7)
         remark #25420: Collapsed with loop at line 2330 
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25439: unrolled with remainder by 8  
         remark #25015: Estimate of max trip count of loop=5

         LOOP BEGIN at lu.c(2330,8)
            remark #25421: Loop eliminated in Collapsing 

         LOOP END
      LOOP END

      LOOP BEGIN at lu.c(2329,7)
      <Remainder>
         remark #25436: completely unrolled by 7  
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at lu.c(2344,3)
   remark #25101: Loop Interchange not done due to: Original Order seems proper
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ L2 nx j k u21 q nz jst jend i } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at lu.c(2345,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at lu.c(2346,7)
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=65
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at lu.c(2364,3)
   remark #25101: Loop Interchange not done due to: Original Order seems proper
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ jend m i m m i i i jst k m u21i u31i u41i u51i tmp u21im1 u31im1 u41im1 u51im1 tx2 ist iend tx3 L2 tx1 dx1 dx2 dx3 dx4 dx5 dssp nx nz j } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at lu.c(2365,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at lu.c(2366,7)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
         remark #25015: Estimate of max trip count of loop=64

         LOOP BEGIN at lu.c(2367,2)
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 5  
         LOOP END
      LOOP END

      LOOP BEGIN at lu.c(2375,7)
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=64
      LOOP END

      LOOP BEGIN at lu.c(2401,7)
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=64
      LOOP END

      LOOP BEGIN at lu.c(2431,7)
         remark #25436: completely unrolled by 5   (pre-vector) 
      LOOP END

      LOOP BEGIN at lu.c(2446,7)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
         remark #25015: Estimate of max trip count of loop=64

         LOOP BEGIN at lu.c(2447,2)
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 5  
         LOOP END
      LOOP END

      LOOP BEGIN at lu.c(2458,7)
         remark #25436: completely unrolled by 5   (pre-vector) 
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at lu.c(2479,3)
   remark #25101: Loop Interchange not done due to: Original Order seems proper
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ iend ist j k ny u31 q nz L2 i } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at lu.c(2480,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at lu.c(2481,7)
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=65
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at lu.c(2498,3)
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ iend m j m m j j ist j k m u21j u31j u41j u51j tmp u21jm1 u31jm1 u41jm1 u51jm1 ty2 jst jend ty3 L2 ty1 dy1 dy2 dy3 dy4 dy5 dssp ny nz i } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at lu.c(2499,7)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at lu.c(2500,7)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
         remark #25015: Estimate of max trip count of loop=65

         LOOP BEGIN at lu.c(2501,2)
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 5  
         LOOP END
      LOOP END

      LOOP BEGIN at lu.c(2508,7)
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=65
      LOOP END

      LOOP BEGIN at lu.c(2533,7)
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=65
      LOOP END

      LOOP BEGIN at lu.c(2569,7)
         remark #25436: completely unrolled by 5   (pre-vector) 
      LOOP END

      LOOP BEGIN at lu.c(2583,7)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
         remark #25015: Estimate of max trip count of loop=65

         LOOP BEGIN at lu.c(2584,2)
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 5  
         LOOP END
      LOOP END

      LOOP BEGIN at lu.c(2594,7)
         remark #25436: completely unrolled by 5   (pre-vector) 
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at lu.c(2611,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between flux[i][j][k][0] (2614:2) and flux[i][j][k+1][m] (2630:4)
   remark #17106: parallel dependence: assumed ANTI dependence between flux[i][j][k+1][m] (2630:4) and flux[i][j][k][0] (2614:2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at lu.c(2612,5)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed FLOW dependence between flux[i][j][k][0] (2614:2) and flux[i][j][k+1][m] (2630:4)
      remark #17106: parallel dependence: assumed ANTI dependence between flux[i][j][k+1][m] (2630:4) and flux[i][j][k][0] (2614:2)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at lu.c(2613,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=65
      LOOP END

      LOOP BEGIN at lu.c(2628,7)
         remark #25420: Collapsed with loop at line 2629 
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=5

         LOOP BEGIN at lu.c(2629,2)
            remark #25421: Loop eliminated in Collapsing 

         LOOP END
      LOOP END

      LOOP BEGIN at lu.c(2635,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=65
      LOOP END

      LOOP BEGIN at lu.c(2661,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=65
      LOOP END

      LOOP BEGIN at lu.c(2691,7)
         remark #25436: completely unrolled by 5   (pre-vector) 
      LOOP END

      LOOP BEGIN at lu.c(2703,7)
         remark #25420: Collapsed with loop at line 2704 
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=5

         LOOP BEGIN at lu.c(2704,2)
            remark #25421: Loop eliminated in Collapsing 

         LOOP END
      LOOP END

      LOOP BEGIN at lu.c(2714,7)
         remark #25436: completely unrolled by 5   (pre-vector) 
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at lu.c(2344,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at lu.c(2345,5)
      remark #17107: loop was not parallelized: inner loop
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at lu.c(2346,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=65
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at lu.c(2364,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at lu.c(2365,5)
      remark #17107: loop was not parallelized: inner loop
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at lu.c(2366,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
         remark #25015: Estimate of max trip count of loop=64

         LOOP BEGIN at lu.c(2367,2)
            remark #17107: loop was not parallelized: inner loop
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 5  
         LOOP END
      LOOP END

      LOOP BEGIN at lu.c(2375,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=64
      LOOP END

      LOOP BEGIN at lu.c(2401,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=64
      LOOP END

      LOOP BEGIN at lu.c(2446,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
         remark #25015: Estimate of max trip count of loop=64

         LOOP BEGIN at lu.c(2447,2)
            remark #17107: loop was not parallelized: inner loop
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 5  
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at lu.c(2479,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at lu.c(2480,5)
      remark #17107: loop was not parallelized: inner loop
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at lu.c(2481,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=65
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at lu.c(2498,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at lu.c(2499,7)
      remark #17107: loop was not parallelized: inner loop
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at lu.c(2500,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
         remark #25015: Estimate of max trip count of loop=65

         LOOP BEGIN at lu.c(2501,2)
            remark #17107: loop was not parallelized: inner loop
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 5  
         LOOP END
      LOOP END

      LOOP BEGIN at lu.c(2508,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=65
      LOOP END

      LOOP BEGIN at lu.c(2533,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=65
      LOOP END

      LOOP BEGIN at lu.c(2583,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
         remark #25015: Estimate of max trip count of loop=65

         LOOP BEGIN at lu.c(2584,2)
            remark #17107: loop was not parallelized: inner loop
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 5  
         LOOP END
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

lu.c(2302,23):remark #34051: REGISTER ALLOCATION : [rhs] lu.c:2302

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :    2743
            Global    :     388
            Local     :    2355
        Regenerable   :     312
        Spilled       :     126
        
    Routine stack
        Variables     :     616 bytes*
            Reads     :       8 [4.49e+02 ~ 0.0%]
            Writes    :     112 [0.00e+00 ~ 0.0%]
        Spills        :    1056 bytes*
            Reads     :     211 [1.82e+05 ~ 0.1%]
            Writes    :     201 [7.17e+04 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: l2norm(int, int, int, int, int, int, int, double (*)[65][65][5], double *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (l2norm(int, int, int, int, int, int, int, double (*)[65][65][5], double *)) [6/18=33.3%] lu.c(1968,22)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at lu.c(1982,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25436: completely unrolled by 5  
LOOP END

LOOP BEGIN at lu.c(1986,3)
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ iend ist j k v nz0 jst jend i } lastprivate={ } firstlastprivate={ } reduction={ sum4 sum3 sum2 sum1 sum0 }
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at lu.c(1987,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at lu.c(1988,7)
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25456: Number of Array Refs Scalar Replaced In Loop: 5
         remark #25015: Estimate of max trip count of loop=65
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at lu.c(2006,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25436: completely unrolled by 5  
LOOP END

LOOP BEGIN at lu.c(1986,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at lu.c(1987,5)
      remark #17107: loop was not parallelized: inner loop
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at lu.c(1988,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25456: Number of Array Refs Scalar Replaced In Loop: 5
         remark #25015: Estimate of max trip count of loop=65
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

lu.c(1968,22):remark #34051: REGISTER ALLOCATION : [l2norm] lu.c:1968

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm14]
        
    Routine temporaries
        Total         :     224
            Global    :      71
            Local     :     153
        Regenerable   :      64
        Spilled       :      18
        
    Routine stack
        Variables     :     100 bytes*
            Reads     :       7 [1.00e+01 ~ 0.2%]
            Writes    :      19 [0.00e+00 ~ 0.0%]
        Spills        :     192 bytes*
            Reads     :      30 [9.60e+00 ~ 0.2%]
            Writes    :      30 [3.60e+00 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: buts(int, int, int, int, double, double (*)[65][65][5], double (*)[64][5], double (*)[64][5][5], double (*)[64][5][5], double (*)[64][5][5], double (*)[64][5][5], int, int, int, int, int, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (buts(int, int, int, int, double, double (*)[65][65][5], double (*)[64][5], double (*)[64][5][5], double (*)[64][5][5], double (*)[64][5][5], double (*)[64][5][5], int, int, int, int, int, int)) [7/18=38.9%] lu.c(424,23)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at lu.c(440,3)
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ ist iend j m udz k v omega tv jst jend i } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at lu.c(441,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=64

      LOOP BEGIN at lu.c(442,7)
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25436: completely unrolled by 5  
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at lu.c(453,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between tmat[m][_2] (486:2) and tmat[0][0] (626:7)
   remark #17106: parallel dependence: assumed ANTI dependence between tmat[0][0] (626:7) and tmat[m][_2] (486:2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at lu.c(467,5)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed FLOW dependence between tmat[m][_2] (486:2) and tmat[0][0] (626:7)
      remark #17106: parallel dependence: assumed ANTI dependence between tmat[0][0] (626:7) and tmat[m][_2] (486:2)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at lu.c(485,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
         remark #25015: Estimate of max trip count of loop=5

         LOOP BEGIN at lu.c(486,2)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25015: Estimate of max trip count of loop=5
         LOOP END
      LOOP END

      LOOP BEGIN at lu.c(495,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25436: completely unrolled by 4  
      LOOP END

      LOOP BEGIN at lu.c(507,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25436: completely unrolled by 4  
      LOOP END

      LOOP BEGIN at lu.c(519,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25436: completely unrolled by 4  
      LOOP END

      LOOP BEGIN at lu.c(531,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25436: completely unrolled by 4  
      LOOP END

      LOOP BEGIN at lu.c(629,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25436: completely unrolled by 5  
      LOOP END

      LOOP BEGIN at lu.c(468,7)
         remark #25436: completely unrolled by 5   (pre-vector) 
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at lu.c(440,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at lu.c(441,5)
      remark #17107: loop was not parallelized: inner loop
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=64

      LOOP BEGIN at lu.c(442,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25436: completely unrolled by 5  
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

lu.c(424,23):remark #34051: REGISTER ALLOCATION : [buts] lu.c:424

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     701
            Global    :     102
            Local     :     599
        Regenerable   :      58
        Spilled       :      44
        
    Routine stack
        Variables     :     284 bytes*
            Reads     :      32 [7.59e+02 ~ 4.0%]
            Writes    :      33 [4.00e+02 ~ 2.1%]
        Spills        :     400 bytes*
            Reads     :      67 [6.46e+02 ~ 3.4%]
            Writes    :      58 [4.88e+02 ~ 2.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: jacu(int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (jacu(int)) [8/18=44.4%] lu.c(1589,25)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at lu.c(1609,3)
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ ist _2 iend j tmp1 tmp2 tmp3 tmp1 tmp2 tmp3 tmp1 tmp2 tmp3 tmp1 tmp2 tmp3 k dz1 tz1 dy1 ty1 dx1 tx1 dt dz2 dy2 dx2 dz3 dy3 dx3 dz4 dy4 dx4 dz5 dy5 dx5 tx2 ty2 tz2 jst jend i } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at lu.c(1610,7)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=64

      LOOP BEGIN at lu.c(1627,7)
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=4
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at lu.c(1609,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at lu.c(1610,7)
      remark #17107: loop was not parallelized: inner loop
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=64

      LOOP BEGIN at lu.c(1627,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=4
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

lu.c(1589,25):remark #34051: REGISTER ALLOCATION : [jacu] lu.c:1589

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :    1294
            Global    :     302
            Local     :     992
        Regenerable   :     131
        Spilled       :     184
        
    Routine stack
        Variables     :     328 bytes*
            Reads     :       2 [1.15e+02 ~ 0.0%]
            Writes    :      47 [0.00e+00 ~ 0.0%]
        Spills        :    1512 bytes*
            Reads     :     266 [5.21e+05 ~ 12.4%]
            Writes    :     251 [3.58e+04 ~ 0.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: blts(int, int, int, int, double, double (*)[65][65][5], double (*)[64][5][5], double (*)[64][5][5], double (*)[64][5][5], double (*)[64][5][5], int, int, int, int, int, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (blts(int, int, int, int, double, double (*)[65][65][5], double (*)[64][5][5], double (*)[64][5][5], double (*)[64][5][5], double (*)[64][5][5], int, int, int, int, int, int)) [9/18=50.0%] lu.c(191,24)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at lu.c(207,3)
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ iend ist j m ldz k v omega jst jend i } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at lu.c(208,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=64

      LOOP BEGIN at lu.c(209,7)
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25436: completely unrolled by 5  
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at lu.c(220,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between v[i][j][k][m] (238:2) and v[i-1][j][k][0] (238:2)
   remark #17106: parallel dependence: assumed FLOW dependence between v[i][j][k][m] (238:2) and v[i-1][j][k][0] (238:2)
   remark #17106: parallel dependence: assumed FLOW dependence between v[i][j][k][m] (238:2) and v[i-1][j][k][0] (238:2)
   remark #17106: parallel dependence: assumed FLOW dependence between v[i][j][k][m] (238:2) and v[i-1][j][k][0] (238:2)
   remark #17106: parallel dependence: assumed FLOW dependence between v[i][j][k][m] (238:2) and v[i-1][j][k][0] (238:2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at lu.c(235,5)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed FLOW dependence between v[i][j][k][m] (238:2) and v[i][j-1][k][0] (238:2)
      remark #17106: parallel dependence: assumed FLOW dependence between v[i][j][k][m] (238:2) and v[i][j-1][k][0] (238:2)
      remark #17106: parallel dependence: assumed FLOW dependence between v[i][j][k][m] (238:2) and v[i][j-1][k][0] (238:2)
      remark #17106: parallel dependence: assumed FLOW dependence between v[i][j][k][m] (238:2) and v[i][j-1][k][0] (238:2)
      remark #17106: parallel dependence: assumed FLOW dependence between v[i][j][k][m] (238:2) and v[i][j-1][k][0] (238:2)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at lu.c(256,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
         remark #25015: Estimate of max trip count of loop=5

         LOOP BEGIN at lu.c(257,2)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25015: Estimate of max trip count of loop=5
         LOOP END
      LOOP END

      LOOP BEGIN at lu.c(266,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25436: completely unrolled by 4  
      LOOP END

      LOOP BEGIN at lu.c(278,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25436: completely unrolled by 4  
      LOOP END

      LOOP BEGIN at lu.c(290,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25436: completely unrolled by 4  
      LOOP END

      LOOP BEGIN at lu.c(302,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25436: completely unrolled by 4  
      LOOP END

      LOOP BEGIN at lu.c(236,7)
         remark #25436: completely unrolled by 5   (pre-vector) 
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at lu.c(207,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at lu.c(208,5)
      remark #17107: loop was not parallelized: inner loop
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=64

      LOOP BEGIN at lu.c(209,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25436: completely unrolled by 5  
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

lu.c(191,24):remark #34051: REGISTER ALLOCATION : [blts] lu.c:191

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     700
            Global    :      88
            Local     :     612
        Regenerable   :      55
        Spilled       :      32
        
    Routine stack
        Variables     :     276 bytes*
            Reads     :      32 [7.59e+02 ~ 4.0%]
            Writes    :      32 [4.00e+02 ~ 2.1%]
        Spills        :     304 bytes*
            Reads     :      48 [4.18e+02 ~ 2.2%]
            Writes    :      45 [3.36e+02 ~ 1.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: jacld(int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (jacld(int)) [10/18=55.6%] lu.c(1222,26)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at lu.c(1241,3)
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ iend _2 ist j tmp1 tmp2 tmp3 tmp1 tmp2 tmp3 tmp1 tmp2 tmp3 tmp1 tmp2 tmp3 k dz1 tz1 dy1 ty1 dx1 tx1 dt dz2 dy2 dx2 dz3 dy3 dx3 dz4 dy4 dx4 dz5 dy5 dx5 tz2 ty2 tx2 jst jend i } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at lu.c(1242,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=64

      LOOP BEGIN at lu.c(1255,7)
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=4
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at lu.c(1241,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at lu.c(1242,5)
      remark #17107: loop was not parallelized: inner loop
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=64

      LOOP BEGIN at lu.c(1255,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=4
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

lu.c(1222,26):remark #34051: REGISTER ALLOCATION : [jacld] lu.c:1222

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :    1344
            Global    :     303
            Local     :    1041
        Regenerable   :     131
        Spilled       :     177
        
    Routine stack
        Variables     :     328 bytes*
            Reads     :       2 [1.15e+02 ~ 0.0%]
            Writes    :      47 [0.00e+00 ~ 0.0%]
        Spills        :    1456 bytes*
            Reads     :     266 [5.31e+05 ~ 12.5%]
            Writes    :     240 [1.54e+04 ~ 0.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: ssor(void)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (ssor(void)) [11/18=61.1%] lu.c(3002,24)
  -> (3043,3) rhs(void) (isz = 2418) (sz = 2421)
     [[ Unable to inline callsite  <1>]]
  -> (3048,3) l2norm(int, int, int, int, int, int, int, double (*)[65][65][5], double *) (isz = 185) (sz = 206)
     [[ Unable to inline callsite  <1>]]
  -> EXTERN: (3053,3) timer_clear(int)
  -> EXTERN: (3054,3) timer_start(int)
  -> EXTERN: (3064,7) printf(const char *__restrict__, ...)
  -> (3086,7) jacld(int) (isz = 2362) (sz = 2367)
     [[ Unable to inline callsite  <1>]]
  -> (3091,7) blts(int, int, int, int, double, double (*)[65][65][5], double (*)[64][5][5], double (*)[64][5][5], double (*)[64][5][5], double (*)[64][5][5], int, int, int, int, int, int) (isz = 1140) (sz = 1175)
     [[ Unable to inline callsite  <1>]]
  -> (3104,7) jacu(int) (isz = 2311) (sz = 2316)
     [[ Unable to inline callsite  <1>]]
  -> (3109,7) buts(int, int, int, int, double, double (*)[65][65][5], double (*)[64][5], double (*)[64][5][5], double (*)[64][5][5], double (*)[64][5][5], double (*)[64][5][5], int, int, int, int, int, int) (isz = 1166) (sz = 1203)
     [[ Unable to inline callsite  <1>]]
  -> (3135,7) l2norm(int, int, int, int, int, int, int, double (*)[65][65][5], double *) (isz = 185) (sz = 206)
     [[ Unable to inline callsite  <1>]]
  -> (3143,5) rhs(void) (isz = 2418) (sz = 2421)
     [[ Unable to inline callsite  <1>]]
  -> (3150,7) l2norm(int, int, int, int, int, int, int, double (*)[65][65][5], double *) (isz = 185) (sz = 206)
     [[ Unable to inline callsite  <1>]]
  -> EXTERN: (3163,2) exit(int)
  -> EXTERN: (3168,3) timer_stop(int)
  -> EXTERN: (3169,12) timer_read(int)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at lu.c(3027,3)
   remark #25101: Loop Interchange not done due to: Original Order seems proper
   remark #25452: Original Order found to be proper, but by a close margin
   remark #25420: Collapsed with loop at line 3028 
   remark #25420: Collapsed with loop at line 3029 
   remark #25420: Collapsed with loop at line 3030 
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ } private={ } firstprivate={ j k m i } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25438: unrolled without remainder by 2  
   remark #25015: Estimate of max trip count of loop=102400

   LOOP BEGIN at lu.c(3028,5)
      remark #25421: Loop eliminated in Collapsing 


      LOOP BEGIN at lu.c(3029,7)
         remark #25421: Loop eliminated in Collapsing 


         LOOP BEGIN at lu.c(3030,2)
            remark #25421: Loop eliminated in Collapsing 

         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at lu.c(3061,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at lu.c(3072,5)
      remark #25101: Loop Interchange not done due to: Original Order seems proper
      remark #25452: Original Order found to be proper, but by a close margin
      remark #17109: LOOP WAS AUTO-PARALLELIZED
      remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ iend ist j k m dt nz jst jend i istep } lastprivate={ } firstlastprivate={ } reduction={ }
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=64

      LOOP BEGIN at lu.c(3073,7)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
         remark #25015: Estimate of max trip count of loop=65

         LOOP BEGIN at lu.c(3074,2)
            remark #25420: Collapsed with loop at line 3075 
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25439: unrolled with remainder by 8  
            remark #25015: Estimate of max trip count of loop=5

            LOOP BEGIN at lu.c(3075,4)
               remark #25421: Loop eliminated in Collapsing 

            LOOP END
         LOOP END

         LOOP BEGIN at lu.c(3074,2)
         <Remainder>
            remark #25436: completely unrolled by 7  
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at lu.c(3082,5)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #15382: vectorization support: call to function jacld(int) cannot be vectorized   [ lu.c(3086,7) ]
      remark #15382: vectorization support: call to function blts(int, int, int, int, double, double (*)[65][65][5], double (*)[64][5][5], double (*)[64][5][5], double (*)[64][5][5], double (*)[64][5][5], int, int, int, int, int, int) cannot be vectorized   [ lu.c(3091,7) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
   LOOP END

   LOOP BEGIN at lu.c(3100,5)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #15382: vectorization support: call to function jacu(int) cannot be vectorized   [ lu.c(3104,7) ]
      remark #15382: vectorization support: call to function buts(int, int, int, int, double, double (*)[65][65][5], double (*)[64][5], double (*)[64][5][5], double (*)[64][5][5], double (*)[64][5][5], double (*)[64][5][5], int, int, int, int, int, int) cannot be vectorized   [ lu.c(3109,7) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
   LOOP END

   LOOP BEGIN at lu.c(3120,5)
      remark #25101: Loop Interchange not done due to: Original Order seems proper
      remark #25452: Original Order found to be proper, but by a close margin
      remark #17109: LOOP WAS AUTO-PARALLELIZED
      remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ iend ist j k m tmp nz jst jend i istep } lastprivate={ } firstlastprivate={ } reduction={ }
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=64

      LOOP BEGIN at lu.c(3121,7)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
         remark #25015: Estimate of max trip count of loop=65

         LOOP BEGIN at lu.c(3122,2)
            remark #25420: Collapsed with loop at line 3123 
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25439: unrolled with remainder by 8  
            remark #25015: Estimate of max trip count of loop=5

            LOOP BEGIN at lu.c(3123,4)
               remark #25421: Loop eliminated in Collapsing 

            LOOP END
         LOOP END

         LOOP BEGIN at lu.c(3122,2)
         <Remainder>
            remark #25436: completely unrolled by 7  
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at lu.c(3027,3)
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25439: unrolled with remainder by 2  
   remark #25015: Estimate of max trip count of loop=102400
LOOP END

LOOP BEGIN at lu.c(3027,3)
<Remainder>
   remark #25015: Estimate of max trip count of loop=102400
LOOP END

LOOP BEGIN at lu.c(3072,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at lu.c(3073,7)
      remark #17107: loop was not parallelized: inner loop
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at lu.c(3074,2)
         remark #17107: loop was not parallelized: inner loop
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25439: unrolled with remainder by 8  
         remark #25015: Estimate of max trip count of loop=5
      LOOP END

      LOOP BEGIN at lu.c(3074,2)
      <Remainder>
         remark #25436: completely unrolled by 7  
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at lu.c(3120,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at lu.c(3121,7)
      remark #17107: loop was not parallelized: inner loop
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at lu.c(3122,2)
         remark #17107: loop was not parallelized: inner loop
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25439: unrolled with remainder by 8  
         remark #25015: Estimate of max trip count of loop=5
      LOOP END

      LOOP BEGIN at lu.c(3122,2)
      <Remainder>
         remark #25436: completely unrolled by 7  
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

lu.c(3002,24):remark #34051: REGISTER ALLOCATION : [ssor] lu.c:3002

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   24[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm8]
        
    Routine temporaries
        Total         :     654
            Global    :     139
            Local     :     515
        Regenerable   :     142
        Spilled       :      32
        
    Routine stack
        Variables     :   164056 bytes*
            Reads     :       6 [2.06e+05 ~ 0.2%]
            Writes    :      42 [0.00e+00 ~ 0.0%]
        Spills        :     304 bytes*
            Reads     :     103 [6.12e+02 ~ 0.0%]
            Writes    :      65 [1.18e+02 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: erhs(void)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (erhs(void)) [12/18=66.7%] lu.c(689,24)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at lu.c(721,3)
   remark #25101: Loop Interchange not done due to: Original Order seems proper
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at lu.c(722,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at lu.c(723,7)
         remark #25420: Collapsed with loop at line 724 
         remark #25408: memset generated
         remark #17104: loop was not parallelized: existence of parallel dependence
         remark #17106: parallel dependence: assumed OUTPUT dependence between frct[i][j][k][m] (723:7) and frct[i][j][k][m] (725:4)
         remark #17106: parallel dependence: assumed OUTPUT dependence between frct[i][j][k][m] (725:4) and frct[i][j][k][m] (723:7)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
         remark #25015: Estimate of max trip count of loop=1

         LOOP BEGIN at lu.c(723,7)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25439: unrolled with remainder by 2  
            remark #25015: Estimate of max trip count of loop=12
         LOOP END

         LOOP BEGIN at lu.c(723,7)
         <Remainder>
            remark #25015: Estimate of max trip count of loop=12
         LOOP END

         LOOP BEGIN at lu.c(724,2)
            remark #25421: Loop eliminated in Collapsing 

         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at lu.c(731,3)
   remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ nx m k j xi eta zeta nx0 ny0 nz ny i } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at lu.c(734,5)
      remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
      remark #25452: Original Order found to be proper, but by a close margin
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at lu.c(737,7)
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=65

         LOOP BEGIN at lu.c(739,2)
            remark #25436: completely unrolled by 5   (pre-vector) 
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at lu.c(765,3)
   remark #25101: Loop Interchange not done due to: Original Order seems proper
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ L2 nx j k u21 q nz jst jend i } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at lu.c(766,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at lu.c(767,7)
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=65
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at lu.c(783,3)
   remark #25101: Loop Interchange not done due to: Original Order seems proper
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ jend m i m m i i i jst k m u21i u31i u41i u51i tmp u21im1 u31im1 u41im1 u51im1 tx2 ist iend tx3 L2 tx1 dx1 dx2 dx3 dx4 dx5 dssp iend1 nx nz j } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at lu.c(784,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at lu.c(785,7)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
         remark #25015: Estimate of max trip count of loop=64

         LOOP BEGIN at lu.c(786,2)
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 5  
         LOOP END
      LOOP END

      LOOP BEGIN at lu.c(791,7)
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=64
      LOOP END

      LOOP BEGIN at lu.c(818,7)
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=64
      LOOP END

      LOOP BEGIN at lu.c(848,7)
         remark #25436: completely unrolled by 5   (pre-vector) 
      LOOP END

      LOOP BEGIN at lu.c(862,7)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
         remark #25015: Estimate of max trip count of loop=64

         LOOP BEGIN at lu.c(863,2)
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 5  
         LOOP END
      LOOP END

      LOOP BEGIN at lu.c(873,7)
         remark #25436: completely unrolled by 5   (pre-vector) 
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at lu.c(894,3)
   remark #25101: Loop Interchange not done due to: Original Order seems proper
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ iend ist j k ny u31 q nz L2 i } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at lu.c(896,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at lu.c(897,7)
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=65
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at lu.c(913,3)
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ iend m j m m j j ist j k m u21j u31j u41j u51j tmp u21jm1 u31jm1 u41jm1 u51jm1 ty2 jst jend ty3 L2 ty1 dy1 dy2 dy3 dy4 dy5 dssp jend1 ny nz i } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at lu.c(914,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at lu.c(915,7)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
         remark #25015: Estimate of max trip count of loop=65

         LOOP BEGIN at lu.c(916,2)
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 5  
         LOOP END
      LOOP END

      LOOP BEGIN at lu.c(921,7)
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=65
      LOOP END

      LOOP BEGIN at lu.c(948,7)
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=65
      LOOP END

      LOOP BEGIN at lu.c(978,7)
         remark #25436: completely unrolled by 5   (pre-vector) 
      LOOP END

      LOOP BEGIN at lu.c(993,7)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
         remark #25015: Estimate of max trip count of loop=65

         LOOP BEGIN at lu.c(994,2)
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 5  
         LOOP END
      LOOP END

      LOOP BEGIN at lu.c(1004,7)
         remark #25436: completely unrolled by 5   (pre-vector) 
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at lu.c(1022,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between flux[i][j][k][0] (1025:2) and flux[i][j][k+1][m] (1040:4)
   remark #17106: parallel dependence: assumed ANTI dependence between flux[i][j][k+1][m] (1040:4) and flux[i][j][k][0] (1025:2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at lu.c(1023,5)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed FLOW dependence between flux[i][j][k][0] (1025:2) and flux[i][j][k+1][m] (1040:4)
      remark #17106: parallel dependence: assumed ANTI dependence between flux[i][j][k+1][m] (1040:4) and flux[i][j][k][0] (1025:2)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at lu.c(1024,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=65
      LOOP END

      LOOP BEGIN at lu.c(1038,7)
         remark #25420: Collapsed with loop at line 1039 
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=5

         LOOP BEGIN at lu.c(1039,2)
            remark #25421: Loop eliminated in Collapsing 

         LOOP END
      LOOP END

      LOOP BEGIN at lu.c(1044,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=65
      LOOP END

      LOOP BEGIN at lu.c(1071,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=65
      LOOP END

      LOOP BEGIN at lu.c(1101,7)
         remark #25436: completely unrolled by 5   (pre-vector) 
      LOOP END

      LOOP BEGIN at lu.c(1113,7)
         remark #25420: Collapsed with loop at line 1114 
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=5

         LOOP BEGIN at lu.c(1114,2)
            remark #25421: Loop eliminated in Collapsing 

         LOOP END
      LOOP END

      LOOP BEGIN at lu.c(1124,7)
         remark #25436: completely unrolled by 5   (pre-vector) 
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at lu.c(731,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at lu.c(734,5)
      remark #17107: loop was not parallelized: inner loop
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at lu.c(737,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=65
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at lu.c(765,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at lu.c(766,5)
      remark #17107: loop was not parallelized: inner loop
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at lu.c(767,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=65
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at lu.c(783,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at lu.c(784,5)
      remark #17107: loop was not parallelized: inner loop
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at lu.c(785,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
         remark #25015: Estimate of max trip count of loop=64

         LOOP BEGIN at lu.c(786,2)
            remark #17107: loop was not parallelized: inner loop
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 5  
         LOOP END
      LOOP END

      LOOP BEGIN at lu.c(791,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=64
      LOOP END

      LOOP BEGIN at lu.c(818,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=64
      LOOP END

      LOOP BEGIN at lu.c(862,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
         remark #25015: Estimate of max trip count of loop=64

         LOOP BEGIN at lu.c(863,2)
            remark #17107: loop was not parallelized: inner loop
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 5  
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at lu.c(894,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at lu.c(896,5)
      remark #17107: loop was not parallelized: inner loop
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at lu.c(897,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=65
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at lu.c(913,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at lu.c(914,5)
      remark #17107: loop was not parallelized: inner loop
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at lu.c(915,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
         remark #25015: Estimate of max trip count of loop=65

         LOOP BEGIN at lu.c(916,2)
            remark #17107: loop was not parallelized: inner loop
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 5  
         LOOP END
      LOOP END

      LOOP BEGIN at lu.c(921,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=65
      LOOP END

      LOOP BEGIN at lu.c(948,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25015: Estimate of max trip count of loop=65
      LOOP END

      LOOP BEGIN at lu.c(993,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
         remark #25015: Estimate of max trip count of loop=65

         LOOP BEGIN at lu.c(994,2)
            remark #17107: loop was not parallelized: inner loop
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 5  
         LOOP END
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

lu.c(723,7):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
lu.c(723,7):remark #34026: call to memset implemented as a call to optimized library version
lu.c(689,24):remark #34051: REGISTER ALLOCATION : [erhs] lu.c:689

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :    3140
            Global    :     480
            Local     :    2660
        Regenerable   :     358
        Spilled       :     179
        
    Routine stack
        Variables     :     704 bytes*
            Reads     :      10 [5.57e+02 ~ 0.0%]
            Writes    :     131 [0.00e+00 ~ 0.0%]
        Spills        :    1480 bytes*
            Reads     :     282 [4.71e+06 ~ 1.7%]
            Writes    :     257 [1.95e+05 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: setiv(void)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (setiv(void)) [13/18=72.2%] lu.c(2944,25)
  -> (2974,6) exact(int, int, int, double *) (isz = 95) (sz = 106)
     [[ Unable to inline callsite  <1>]]
  -> (2975,6) exact(int, int, int, double *) (isz = 95) (sz = 106)
     [[ Unable to inline callsite  <1>]]
  -> (2976,6) exact(int, int, int, double *) (isz = 95) (sz = 106)
     [[ Unable to inline callsite  <1>]]
  -> (2977,6) exact(int, int, int, double *) (isz = 95) (sz = 106)
     [[ Unable to inline callsite  <1>]]
  -> (2978,6) exact(int, int, int, double *) (isz = 95) (sz = 106)
     [[ Unable to inline callsite  <1>]]
  -> (2979,6) exact(int, int, int, double *) (isz = 95) (sz = 106)
     [[ Unable to inline callsite  <1>]]


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at lu.c(2964,3)
   remark #25095: Loop Interchange not done due to: User Function Inside Loop Nest
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact(int, int, int, double *) (2974:6) and call:exact(int, int, int, double *) (2979:6)
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact(int, int, int, double *) (2979:6) and call:exact(int, int, int, double *) (2974:6)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at lu.c(2966,5)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact(int, int, int, double *) (2974:6) and call:exact(int, int, int, double *) (2979:6)
      remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact(int, int, int, double *) (2979:6) and call:exact(int, int, int, double *) (2974:6)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at lu.c(2970,2)
         remark #17104: loop was not parallelized: existence of parallel dependence
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at lu.c(2980,6)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 5  
         LOOP END
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

lu.c(2944,25):remark #34051: REGISTER ALLOCATION : [setiv] lu.c:2944

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     192
            Global    :      31
            Local     :     161
        Regenerable   :      17
        Spilled       :      22
        
    Routine stack
        Variables     :     240 bytes*
            Reads     :      30 [1.63e+05 ~ 12.5%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :     176 bytes*
            Reads     :      22 [4.74e+04 ~ 3.6%]
            Writes    :      22 [8.39e+03 ~ 0.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: setbv(void)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (setbv(void)) [14/18=77.8%] lu.c(2734,25)
  -> (2755,7) exact(int, int, int, double *) (isz = 95) (sz = 106)
     [[ Unable to inline callsite  <1>]]
  -> (2756,7) exact(int, int, int, double *) (isz = 95) (sz = 106)
     [[ Unable to inline callsite  <1>]]
  -> (2766,7) exact(int, int, int, double *) (isz = 95) (sz = 106)
     [[ Unable to inline callsite  <1>]]
  -> (2773,7) exact(int, int, int, double *) (isz = 95) (sz = 106)
     [[ Unable to inline callsite  <1>]]
  -> (2783,7) exact(int, int, int, double *) (isz = 95) (sz = 106)
     [[ Unable to inline callsite  <1>]]
  -> (2790,7) exact(int, int, int, double *) (isz = 95) (sz = 106)
     [[ Unable to inline callsite  <1>]]


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at lu.c(2751,3)
   remark #25095: Loop Interchange not done due to: User Function Inside Loop Nest
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact(int, int, int, double *) (2755:7) and call:exact(int, int, int, double *) (2756:7)
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact(int, int, int, double *) (2756:7) and call:exact(int, int, int, double *) (2755:7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at lu.c(2753,5)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #15382: vectorization support: call to function exact(int, int, int, double *) cannot be vectorized   [ lu.c(2755,7) ]
      remark #15382: vectorization support: call to function exact(int, int, int, double *) cannot be vectorized   [ lu.c(2756,7) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #25015: Estimate of max trip count of loop=65
   LOOP END
LOOP END

LOOP BEGIN at lu.c(2763,3)
   remark #25095: Loop Interchange not done due to: User Function Inside Loop Nest
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact(int, int, int, double *) (2766:7) and call:exact(int, int, int, double *) (2766:7)
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact(int, int, int, double *) (2766:7) and call:exact(int, int, int, double *) (2766:7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at lu.c(2765,5)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #15382: vectorization support: call to function exact(int, int, int, double *) cannot be vectorized   [ lu.c(2766,7) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #25015: Estimate of max trip count of loop=65
   LOOP END
LOOP END

LOOP BEGIN at lu.c(2770,3)
   remark #25095: Loop Interchange not done due to: User Function Inside Loop Nest
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact(int, int, int, double *) (2773:7) and call:exact(int, int, int, double *) (2773:7)
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact(int, int, int, double *) (2773:7) and call:exact(int, int, int, double *) (2773:7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at lu.c(2772,5)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #15382: vectorization support: call to function exact(int, int, int, double *) cannot be vectorized   [ lu.c(2773,7) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #25015: Estimate of max trip count of loop=65
   LOOP END
LOOP END

LOOP BEGIN at lu.c(2780,3)
   remark #25095: Loop Interchange not done due to: User Function Inside Loop Nest
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact(int, int, int, double *) (2783:7) and call:exact(int, int, int, double *) (2783:7)
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact(int, int, int, double *) (2783:7) and call:exact(int, int, int, double *) (2783:7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at lu.c(2782,5)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #15382: vectorization support: call to function exact(int, int, int, double *) cannot be vectorized   [ lu.c(2783,7) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #25015: Estimate of max trip count of loop=65
   LOOP END
LOOP END

LOOP BEGIN at lu.c(2787,3)
   remark #25095: Loop Interchange not done due to: User Function Inside Loop Nest
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact(int, int, int, double *) (2790:7) and call:exact(int, int, int, double *) (2790:7)
   remark #17106: parallel dependence: assumed OUTPUT dependence between call:exact(int, int, int, double *) (2790:7) and call:exact(int, int, int, double *) (2790:7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at lu.c(2789,5)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #15382: vectorization support: call to function exact(int, int, int, double *) cannot be vectorized   [ lu.c(2790,7) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #25015: Estimate of max trip count of loop=65
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

lu.c(2734,25):remark #34051: REGISTER ALLOCATION : [setbv] lu.c:2734

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :      77
            Global    :      38
            Local     :      39
        Regenerable   :       5
        Spilled       :      10
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :      12 [3.42e+03 ~ 2.1%]
            Writes    :      11 [2.54e+02 ~ 0.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: setcoeff(void)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (setcoeff(void)) [15/18=83.3%] lu.c(2800,28)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at lu.c(2857,3)
   remark #25399: memcopy generated
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at lu.c(2874,3)
   remark #25399: memcopy generated
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at lu.c(2891,3)
   remark #25399: memcopy generated
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at lu.c(2908,3)
   remark #25399: memcopy generated
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at lu.c(2925,3)
   remark #25399: memcopy generated
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy
   remark #25015: Estimate of max trip count of loop=1
LOOP END

    Report from: Code generation optimizations [cg]

lu.c(2857,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (32, 0)
lu.c(2874,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (32, 8)
lu.c(2891,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (32, 16)
lu.c(2908,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (32, 24)
lu.c(2925,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (32, 0)
lu.c(2800,28):remark #34051: REGISTER ALLOCATION : [setcoeff] lu.c:2800

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   25[ rax rdx rcx rsi rdi r8-r11 zmm0-zmm15]
        
    Routine temporaries
        Total         :      75
            Global    :       6
            Local     :      69
        Regenerable   :      39
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: domain(void)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (domain(void)) [16/18=88.9%] lu.c(646,26)
  -> EXTERN: (660,5) printf(const char *__restrict__, ...)
  -> EXTERN: (664,5) exit(int)
  -> EXTERN: (668,5) printf(const char *__restrict__, ...)
  -> EXTERN: (673,5) exit(int)


    Report from: Code generation optimizations [cg]

lu.c(646,26):remark #34051: REGISTER ALLOCATION : [domain] lu.c:646

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    5[ rax rdx rcx rsi rdi]
        
    Routine temporaries
        Total         :      26
            Global    :       9
            Local     :      17
        Regenerable   :       9
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: read_input(void)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (read_input(void)) [17/18=94.4%] lu.c(2215,30)
  -> EXTERN: (2230,3) printf(const char *__restrict__, ...)
  -> EXTERN: (2233,8) fopen(const char *__restrict__, const char *__restrict__)
  -> EXTERN: (2235,5) printf(const char *__restrict__, ...)
  -> EXTERN: (2237,11) fgetc(FILE *)
  -> EXTERN: (2237,11) fgetc(FILE *)
  -> EXTERN: (2237,37) fgetc(FILE *)
  -> EXTERN: (2237,37) fgetc(FILE *)
  -> EXTERN: (2238,5) fscanf(FILE *__restrict__, const char *__restrict__, ...)
  -> EXTERN: (2239,11) fgetc(FILE *)
  -> EXTERN: (2239,11) fgetc(FILE *)
  -> EXTERN: (2241,11) fgetc(FILE *)
  -> EXTERN: (2241,11) fgetc(FILE *)
  -> EXTERN: (2241,37) fgetc(FILE *)
  -> EXTERN: (2241,37) fgetc(FILE *)
  -> EXTERN: (2242,5) fscanf(FILE *__restrict__, const char *__restrict__, ...)
  -> EXTERN: (2243,11) fgetc(FILE *)
  -> EXTERN: (2243,11) fgetc(FILE *)
  -> EXTERN: (2245,11) fgetc(FILE *)
  -> EXTERN: (2245,11) fgetc(FILE *)
  -> EXTERN: (2245,37) fgetc(FILE *)
  -> EXTERN: (2245,37) fgetc(FILE *)
  -> EXTERN: (2246,5) fscanf(FILE *__restrict__, const char *__restrict__, ...)
  -> EXTERN: (2247,11) fgetc(FILE *)
  -> EXTERN: (2247,11) fgetc(FILE *)
  -> EXTERN: (2249,11) fgetc(FILE *)
  -> EXTERN: (2249,11) fgetc(FILE *)
  -> EXTERN: (2249,37) fgetc(FILE *)
  -> EXTERN: (2249,37) fgetc(FILE *)
  -> EXTERN: (2250,5) fscanf(FILE *__restrict__, const char *__restrict__, ...)
  -> EXTERN: (2251,11) fgetc(FILE *)
  -> EXTERN: (2251,11) fgetc(FILE *)
  -> EXTERN: (2253,11) fgetc(FILE *)
  -> EXTERN: (2253,11) fgetc(FILE *)
  -> EXTERN: (2253,37) fgetc(FILE *)
  -> EXTERN: (2253,37) fgetc(FILE *)
  -> EXTERN: (2254,5) fscanf(FILE *__restrict__, const char *__restrict__, ...)
  -> EXTERN: (2256,11) fgetc(FILE *)
  -> EXTERN: (2256,11) fgetc(FILE *)
  -> EXTERN: (2258,11) fgetc(FILE *)
  -> EXTERN: (2258,11) fgetc(FILE *)
  -> EXTERN: (2258,37) fgetc(FILE *)
  -> EXTERN: (2258,37) fgetc(FILE *)
  -> EXTERN: (2259,5) fscanf(FILE *__restrict__, const char *__restrict__, ...)
  -> EXTERN: (2260,11) fgetc(FILE *)
  -> EXTERN: (2260,11) fgetc(FILE *)
  -> EXTERN: (2261,5) fclose(FILE *)
  -> EXTERN: (2283,5) printf(const char *__restrict__, ...)
  -> EXTERN: (2285,5) exit(int)
  -> EXTERN: (2289,5) printf(const char *__restrict__, ...)
  -> EXTERN: (2292,5) exit(int)
  -> EXTERN: (2295,3) printf(const char *__restrict__, ...)
  -> EXTERN: (2296,3) printf(const char *__restrict__, ...)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at lu.c(2237,5)
   remark #17102: loop was not parallelized: not a parallelization candidate
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at lu.c(2237,31)
   remark #17102: loop was not parallelized: not a parallelization candidate
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at lu.c(2239,5)
   remark #17102: loop was not parallelized: not a parallelization candidate
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at lu.c(2241,5)
   remark #17102: loop was not parallelized: not a parallelization candidate
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at lu.c(2241,31)
   remark #17102: loop was not parallelized: not a parallelization candidate
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at lu.c(2243,5)
   remark #17102: loop was not parallelized: not a parallelization candidate
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at lu.c(2245,5)
   remark #17102: loop was not parallelized: not a parallelization candidate
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at lu.c(2245,31)
   remark #17102: loop was not parallelized: not a parallelization candidate
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at lu.c(2247,5)
   remark #17102: loop was not parallelized: not a parallelization candidate
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at lu.c(2249,5)
   remark #17102: loop was not parallelized: not a parallelization candidate
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at lu.c(2249,31)
   remark #17102: loop was not parallelized: not a parallelization candidate
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at lu.c(2251,5)
   remark #17102: loop was not parallelized: not a parallelization candidate
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at lu.c(2253,5)
   remark #17102: loop was not parallelized: not a parallelization candidate
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at lu.c(2253,31)
   remark #17102: loop was not parallelized: not a parallelization candidate
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at lu.c(2256,5)
   remark #17102: loop was not parallelized: not a parallelization candidate
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at lu.c(2258,5)
   remark #17102: loop was not parallelized: not a parallelization candidate
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at lu.c(2258,31)
   remark #17102: loop was not parallelized: not a parallelization candidate
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at lu.c(2260,5)
   remark #17102: loop was not parallelized: not a parallelization candidate
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at lu.c(2268,5)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   remark #25436: completely unrolled by 5  
LOOP END

    Report from: Code generation optimizations [cg]

lu.c(2215,30):remark #34051: REGISTER ALLOCATION : [read_input] lu.c:2215

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rsi rdi r8-r9 r12]
        
    Routine temporaries
        Total         :     197
            Global    :      84
            Local     :     113
        Regenerable   :      66
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: main(int, char **)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (main(int, char **)) [18/18=100.0%] lu.c(91,33)
  -> (108,3) read_input(void) (isz = 448) (sz = 451)
     [[ Unable to inline callsite  <1>]]
  -> (113,3) domain(void) (isz = 46) (sz = 49)
     [[ Unable to inline callsite  <1>]]
  -> (118,3) setcoeff(void) (isz = 260) (sz = 263)
     [[ Unable to inline callsite  <1>]]
  -> (123,3) setbv(void) (isz = 201) (sz = 204)
     [[ Unable to inline callsite  <1>]]
  -> (128,3) setiv(void) (isz = 162) (sz = 165)
     [[ Unable to inline callsite  <1>]]
  -> (133,3) erhs(void) (isz = 2546) (sz = 2549)
     [[ Unable to inline callsite  <1>]]
  -> (145,3) ssor(void) (isz = 413) (sz = 416)
     [[ Unable to inline callsite  <1>]]
  -> (150,3) error(void) (isz = 114) (sz = 117)
     [[ Unable to inline callsite  <1>]]
  -> (155,3) pintgr(void) (isz = 772) (sz = 775)
     [[ Unable to inline callsite  <1>]]
  -> (160,3) verify(double *, double *, double, char *, boolean *) (isz = 483) (sz = 496)
     [[ Unable to inline callsite  <1>]]
  -> EXTERN: (169,3) c_print_results(char *, char, int, int, int, int, int, double, double, char *, int, char *, char *, char *, char *, char *, char *, char *, char *, char *)


    Report from: Code generation optimizations [cg]

lu.c(91,33):remark #34051: REGISTER ALLOCATION : [main] lu.c:91

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   19[ rax rdx rcx rsi rdi r8-r11 zmm0-zmm9]
        
    Routine temporaries
        Total         :      69
            Global    :       6
            Local     :      63
        Regenerable   :      24
        Spilled       :       0
        
    Routine stack
        Variables     :       9 bytes*
            Reads     :       4 [2.00e+00 ~ 2.5%]
            Writes    :       2 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

    Report from: Interprocedural optimizations [ipo]

INLINING FOOTNOTES:

<1> Inlining the function will lead to incorrect program behavior.

